spring:
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        namespace: c8ae8be9-471e-4fa5-a5a0-9dfa8bc3d216
  #springCloudSleuth
  sleuth:
    sampler:
    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路
      probability: 1
  kafka: 
    bootstrap-servers: 127.0.0.1:9092
  zipkin:   
    baseUrl: http://127.0.0.1:9411/
    enabled: true
    sender:
      type: kafka
    service:
      name: backstage-service
  # es
  data:
  elasticsearch:
    rest:
      uris: [ "127.0.0.1:9200" ]
    elasticsearch:
      #集群名称
      cluster-name: docker-cluster 
      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode
      cluster-nodes: 127.0.0.1:9300 
      properties:
        path:
          #elasticsearch日志存储目录
          logs: /home/aisys/logs/elasticsearch/log 
          #elasticsearch数据存储目录
          data: /home/aisys/logs/elasticsearch/data       

  datasource:
    dynamic:
      #hikari 数据源配置
      hikari:
        # 最大连接数
        max-pool-size: 30
        connection-timeout: 10000
        idle-timeout: 30000
        max-lifetime: 900000
        connection-test-query: SELECT 1
        # 最小连接数
        min-idle: 10
        is-auto-commit: true
      primary: db1   #设置默认的数据源
      datasource:
        db1:
          url: jdbc:mysql://127.0.0.1:3306/xiyandb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true
          username: root
          password: yoostar403
          driver-class-name: com.mysql.cj.jdbc.Driver
      
      # Redis
  redis:
    host: 127.0.0.1
    port: 6379
    timeout: 10000
    password: yoostar403
    cache:
      expires: 1
      
#feign
feign: 
  sentinel: 
    enabled: true
  #feign调用超时时间配置，超过这个时间就熔断降级
  client:
    config:
      default:
        connectTimeout: 15000
        readTimeout: 15000
        loggerLevel: BASIC
     
#  mybatis-plus配置
mybatis-plus:
  #实体类扫描地址
  type-aliases-package: com.yoostar.domain
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  mapper-locations: classpath:/mapper/*Mapper.xml
  # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
      #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: auto
      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #数据库类型
      db-type: MYSQL
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl


# Seata
seata:
  # seata 事务组编号，用于 TC 集群名
  tx-service-group: bss
  # seata 应用编号，默认为 ${spring.application.name}
  application-id: backstage-service
  service:
     # 虚拟组和分组的映射, key一定要与 tx-service-group一致
    vgroup-mapping:
      bss: default
    grouplist:
      default: 127.0.0.1:8091
  # seata 注册中心配置项，对应 RegistryProperties 类
  # registry:
  #   # 注册中心类型，默认为 file
  #   type: nacos
  #   nacos:
  #     #Nacos 服务地址
  #     server-addr: 127.0.0.1:8848
  # config:
  #    # 注册中心类型，默认为 file
  #   type: nacos
  #   nacos:
  #     # Nacos 服务地址
  #     server-addr: 127.0.0.1:8848 

#redis序列化key
redis-key: xiyan

