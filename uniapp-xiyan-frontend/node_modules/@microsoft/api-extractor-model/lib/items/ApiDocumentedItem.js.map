{"version":3,"file":"ApiDocumentedItem.js","sourceRoot":"","sources":["../../src/items/ApiDocumentedItem.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;AAE3D,wDAA0C;AAC1C,uCAAmE;AAenE;;;;;;;;;GASG;AACH,MAAa,iBAAkB,SAAQ,iBAAO;IAG5C,YAAmB,OAAkC;QACnD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,UAAU,CAAC;IAC1C,CAAC;IAED,gBAAgB;IACT,MAAM,CAAC,iBAAiB,CAC7B,OAA2C,EAC3C,OAA4B,EAC5B,UAAwB;QAExB,KAAK,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;QAEtD,MAAM,cAAc,GAA2B,UAAoC,CAAC;QAEpF,IAAI,cAAc,CAAC,UAAU,EAAE;YAC7B,MAAM,WAAW,GAAsB,IAAI,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;YAEzF,8EAA8E;YAC9E,2FAA2F;YAC3F,gGAAgG;YAChG,8EAA8E;YAC9E,MAAM,aAAa,GAAwB,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YAE9F,OAAO,CAAC,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC;SAC/C;IACH,CAAC;IAED,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,gBAAgB;IACT,aAAa,CAAC,UAA2C;QAC9D,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAChC,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;YACnC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACzD;aAAM;YACL,UAAU,CAAC,UAAU,GAAG,EAAE,CAAC;SAC5B;IACH,CAAC;CACF;AA5CD,8CA4CC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as tsdoc from '@microsoft/tsdoc';\r\nimport { ApiItem, IApiItemOptions, IApiItemJson } from './ApiItem';\r\nimport { DeserializerContext } from '../model/DeserializerContext';\r\n\r\n/**\r\n * Constructor options for {@link ApiDocumentedItem}.\r\n * @public\r\n */\r\nexport interface IApiDocumentedItemOptions extends IApiItemOptions {\r\n  docComment: tsdoc.DocComment | undefined;\r\n}\r\n\r\nexport interface IApiDocumentedItemJson extends IApiItemJson {\r\n  docComment: string;\r\n}\r\n\r\n/**\r\n * An abstract base class for API declarations that can have an associated TSDoc comment.\r\n *\r\n * @remarks\r\n *\r\n * This is part of the {@link ApiModel} hierarchy of classes, which are serializable representations of\r\n * API declarations.\r\n *\r\n * @public\r\n */\r\nexport class ApiDocumentedItem extends ApiItem {\r\n  private _tsdocComment: tsdoc.DocComment | undefined;\r\n\r\n  public constructor(options: IApiDocumentedItemOptions) {\r\n    super(options);\r\n    this._tsdocComment = options.docComment;\r\n  }\r\n\r\n  /** @override */\r\n  public static onDeserializeInto(\r\n    options: Partial<IApiDocumentedItemOptions>,\r\n    context: DeserializerContext,\r\n    jsonObject: IApiItemJson\r\n  ): void {\r\n    super.onDeserializeInto(options, context, jsonObject);\r\n\r\n    const documentedJson: IApiDocumentedItemJson = jsonObject as IApiDocumentedItemJson;\r\n\r\n    if (documentedJson.docComment) {\r\n      const tsdocParser: tsdoc.TSDocParser = new tsdoc.TSDocParser(context.tsdocConfiguration);\r\n\r\n      // NOTE: For now, we ignore TSDoc errors found in a serialized .api.json file.\r\n      // Normally these errors would have already been reported by API Extractor during analysis.\r\n      // However, they could also arise if the JSON file was edited manually, or if the file was saved\r\n      // using a different release of the software that used an incompatible syntax.\r\n      const parserContext: tsdoc.ParserContext = tsdocParser.parseString(documentedJson.docComment);\r\n\r\n      options.docComment = parserContext.docComment;\r\n    }\r\n  }\r\n\r\n  public get tsdocComment(): tsdoc.DocComment | undefined {\r\n    return this._tsdocComment;\r\n  }\r\n\r\n  /** @override */\r\n  public serializeInto(jsonObject: Partial<IApiDocumentedItemJson>): void {\r\n    super.serializeInto(jsonObject);\r\n    if (this.tsdocComment !== undefined) {\r\n      jsonObject.docComment = this.tsdocComment.emitAsTsdoc();\r\n    } else {\r\n      jsonObject.docComment = '';\r\n    }\r\n  }\r\n}\r\n"]}