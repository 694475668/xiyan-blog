{"version":3,"file":"ApiConstructor.js","sourceRoot":"","sources":["../../src/model/ApiConstructor.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,kGAIiE;AAEjE,8DAAoF;AACpF,2EAAuG;AACvG,qEAA8F;AAW9F;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACH,MAAa,cAAe,SAAQ,6CAAqB,CAAC,uCAAkB,CAAC,iCAAe,CAAC,CAAC;IAC5F,YAAmB,OAA+B;QAChD,KAAK,CAAC,OAAO,CAAC,CAAC;IACjB,CAAC;IAEM,MAAM,CAAC,eAAe,CAAC,aAAqB;QACjD,OAAO,IAAI,+BAAuB,IAAI,aAAa,EAAE,CAAC;IACxD,CAAC;IAED,gBAAgB;IAChB,IAAW,IAAI;QACb,uCAA+B;IACjC,CAAC;IAED,gBAAgB;IAChB,IAAW,YAAY;QACrB,OAAO,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5D,CAAC;IAED,sBAAsB;IACf,uBAAuB;QAC5B,MAAM,MAAM,GAAyB,IAAI,CAAC,MAAM;YAC9C,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB;YAChC,CAAC,CAAC,iDAAiD;gBACjD,2CAAoB,CAAC,KAAK,EAAE,CAAC,iBAAiB,oBAAqB,UAAU,CAAC,CAAC;QACnF,OAAO,MAAM,CAAC,WAAW,iCAAqB,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACvF,CAAC;CACF;AA3BD,wCA2BC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport {\r\n  DeclarationReference,\r\n  Meaning,\r\n  Navigation\r\n} from '@microsoft/tsdoc/lib-commonjs/beta/DeclarationReference';\r\nimport { ApiItemKind } from '../items/ApiItem';\r\nimport { IApiDeclaredItemOptions, ApiDeclaredItem } from '../items/ApiDeclaredItem';\r\nimport { IApiParameterListMixinOptions, ApiParameterListMixin } from '../mixins/ApiParameterListMixin';\r\nimport { IApiReleaseTagMixinOptions, ApiReleaseTagMixin } from '../mixins/ApiReleaseTagMixin';\r\n\r\n/**\r\n * Constructor options for {@link ApiConstructor}.\r\n * @public\r\n */\r\nexport interface IApiConstructorOptions\r\n  extends IApiParameterListMixinOptions,\r\n    IApiReleaseTagMixinOptions,\r\n    IApiDeclaredItemOptions {}\r\n\r\n/**\r\n * Represents a TypeScript class constructor declaration that belongs to an `ApiClass`.\r\n *\r\n * @remarks\r\n *\r\n * This is part of the {@link ApiModel} hierarchy of classes, which are serializable representations of\r\n * API declarations.\r\n *\r\n * `ApiConstructor` represents a declaration using the `constructor` keyword such as in this example:\r\n *\r\n * ```ts\r\n * export class Vector {\r\n *   public x: number;\r\n *   public y: number;\r\n *\r\n *   // A class constructor:\r\n *   public constructor(x: number, y: number) {\r\n *     this.x = x;\r\n *     this.y = y;\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * Compare with {@link ApiConstructSignature}, which describes the construct signature for a class constructor.\r\n *\r\n * @public\r\n */\r\nexport class ApiConstructor extends ApiParameterListMixin(ApiReleaseTagMixin(ApiDeclaredItem)) {\r\n  public constructor(options: IApiConstructorOptions) {\r\n    super(options);\r\n  }\r\n\r\n  public static getContainerKey(overloadIndex: number): string {\r\n    return `|${ApiItemKind.Constructor}|${overloadIndex}`;\r\n  }\r\n\r\n  /** @override */\r\n  public get kind(): ApiItemKind {\r\n    return ApiItemKind.Constructor;\r\n  }\r\n\r\n  /** @override */\r\n  public get containerKey(): string {\r\n    return ApiConstructor.getContainerKey(this.overloadIndex);\r\n  }\r\n\r\n  /** @beta @override */\r\n  public buildCanonicalReference(): DeclarationReference {\r\n    const parent: DeclarationReference = this.parent\r\n      ? this.parent.canonicalReference\r\n      : // .withMeaning() requires some kind of component\r\n        DeclarationReference.empty().addNavigationStep(Navigation.Members, '(parent)');\r\n    return parent.withMeaning(Meaning.Constructor).withOverloadIndex(this.overloadIndex);\r\n  }\r\n}\r\n"]}