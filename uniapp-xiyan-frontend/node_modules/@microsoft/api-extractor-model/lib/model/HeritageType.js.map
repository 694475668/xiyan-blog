{"version":3,"file":"HeritageType.js","sourceRoot":"","sources":["../../src/model/HeritageType.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAI3D;;;;;;;;;;;;;;GAcG;AACH,MAAa,YAAY;IAiBvB,YAAmB,OAAgB;QACjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CACF;AApBD,oCAoBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { Excerpt } from '../mixins/Excerpt';\r\n\r\n/**\r\n * Represents a type referenced via an \"extends\" or \"implements\" heritage clause for a TypeScript class.\r\n * @remarks\r\n *\r\n * For example, consider this declaration:\r\n *\r\n * ```ts\r\n * export class Widget extends Controls.WidgetBase implements Controls.IWidget, IDisposable {\r\n *   // . . .\r\n * }\r\n * ```\r\n *\r\n * The heritage types are `Controls.WidgetBase`, `Controls.IWidget`, and `IDisposable`.\r\n * @public\r\n */\r\nexport class HeritageType {\r\n  /**\r\n   * An excerpt corresponding to the referenced type.\r\n   * @remarks\r\n   *\r\n   * For example, consider this declaration:\r\n   *\r\n   * ```ts\r\n   * export class Widget extends Controls.WidgetBase implements Controls.IWidget, IDisposable {\r\n   *   // . . .\r\n   * }\r\n   * ```\r\n   *\r\n   * The excerpt might be `Controls.WidgetBase`, `Controls.IWidget`, or `IDisposable`.\r\n   */\r\n  public readonly excerpt: Excerpt;\r\n\r\n  public constructor(excerpt: Excerpt) {\r\n    this.excerpt = excerpt;\r\n  }\r\n}\r\n"]}