{"version":3,"file":"ApiEnum.js","sourceRoot":"","sources":["../../src/model/ApiEnum.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,kGAKiE;AAEjE,8DAAoF;AACpF,qEAA8F;AAC9F,2EAAuG;AAEvG,yDAA4E;AAY5E;;;;;;;;;;;;;;;;;;;GAmBG;AACH,MAAa,OAAQ,SAAQ,6CAAqB,CAAC,2BAAY,CAAC,uCAAkB,CAAC,iCAAe,CAAC,CAAC,CAAC;IACnG,YAAmB,OAAwB;QACzC,KAAK,CAAC,OAAO,CAAC,CAAC;IACjB,CAAC;IAEM,MAAM,CAAC,eAAe,CAAC,IAAY;QACxC,OAAO,GAAG,IAAI,IAAI,iBAAgB,EAAE,CAAC;IACvC,CAAC;IAED,gBAAgB;IAChB,IAAW,IAAI;QACb,yBAAwB;IAC1B,CAAC;IAED,gBAAgB;IAChB,IAAW,OAAO;QAChB,OAAO,KAAK,CAAC,OAAuC,CAAC;IACvD,CAAC;IAED,gBAAgB;IAChB,IAAW,YAAY;QACrB,OAAO,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,gBAAgB;IACT,SAAS,CAAC,MAAqB;QACpC,IAAI,MAAM,CAAC,IAAI,kCAA2B,EAAE;YAC1C,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;SAC1E;QACD,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,sBAAsB;IACf,uBAAuB;QAC5B,MAAM,aAAa,GAAc,2CAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChF,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,2CAAoB,CAAC,KAAK,EAAE,CAAC;aACjF,iBAAiB,oBAAqB,aAAa,CAAC;aACpD,WAAW,mBAAc,CAAC;IAC/B,CAAC;CACF;AAvCD,0BAuCC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport {\r\n  DeclarationReference,\r\n  Meaning,\r\n  Navigation,\r\n  Component\r\n} from '@microsoft/tsdoc/lib-commonjs/beta/DeclarationReference';\r\nimport { ApiItemKind } from '../items/ApiItem';\r\nimport { ApiDeclaredItem, IApiDeclaredItemOptions } from '../items/ApiDeclaredItem';\r\nimport { ApiReleaseTagMixin, IApiReleaseTagMixinOptions } from '../mixins/ApiReleaseTagMixin';\r\nimport { ApiItemContainerMixin, IApiItemContainerMixinOptions } from '../mixins/ApiItemContainerMixin';\r\nimport { ApiEnumMember } from './ApiEnumMember';\r\nimport { IApiNameMixinOptions, ApiNameMixin } from '../mixins/ApiNameMixin';\r\n\r\n/**\r\n * Constructor options for {@link ApiEnum}.\r\n * @public\r\n */\r\nexport interface IApiEnumOptions\r\n  extends IApiItemContainerMixinOptions,\r\n    IApiNameMixinOptions,\r\n    IApiReleaseTagMixinOptions,\r\n    IApiDeclaredItemOptions {}\r\n\r\n/**\r\n * Represents a TypeScript enum declaration.\r\n *\r\n * @remarks\r\n *\r\n * This is part of the {@link ApiModel} hierarchy of classes, which are serializable representations of\r\n * API declarations.\r\n *\r\n * `ApiEnum` represents an enum declaration such as `FontSizes` in the example below:\r\n *\r\n * ```ts\r\n * export enum FontSizes {\r\n *   Small = 100,\r\n *   Medium = 200,\r\n *   Large = 300\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nexport class ApiEnum extends ApiItemContainerMixin(ApiNameMixin(ApiReleaseTagMixin(ApiDeclaredItem))) {\r\n  public constructor(options: IApiEnumOptions) {\r\n    super(options);\r\n  }\r\n\r\n  public static getContainerKey(name: string): string {\r\n    return `${name}|${ApiItemKind.Enum}`;\r\n  }\r\n\r\n  /** @override */\r\n  public get kind(): ApiItemKind {\r\n    return ApiItemKind.Enum;\r\n  }\r\n\r\n  /** @override */\r\n  public get members(): ReadonlyArray<ApiEnumMember> {\r\n    return super.members as ReadonlyArray<ApiEnumMember>;\r\n  }\r\n\r\n  /** @override */\r\n  public get containerKey(): string {\r\n    return ApiEnum.getContainerKey(this.name);\r\n  }\r\n\r\n  /** @override */\r\n  public addMember(member: ApiEnumMember): void {\r\n    if (member.kind !== ApiItemKind.EnumMember) {\r\n      throw new Error('Only ApiEnumMember objects can be added to an ApiEnum');\r\n    }\r\n    super.addMember(member);\r\n  }\r\n\r\n  /** @beta @override */\r\n  public buildCanonicalReference(): DeclarationReference {\r\n    const nameComponent: Component = DeclarationReference.parseComponent(this.name);\r\n    return (this.parent ? this.parent.canonicalReference : DeclarationReference.empty())\r\n      .addNavigationStep(Navigation.Exports, nameComponent)\r\n      .withMeaning(Meaning.Enum);\r\n  }\r\n}\r\n"]}