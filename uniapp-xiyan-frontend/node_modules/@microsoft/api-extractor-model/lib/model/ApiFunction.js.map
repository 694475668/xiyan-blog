{"version":3,"file":"ApiFunction.js","sourceRoot":"","sources":["../../src/model/ApiFunction.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,kGAKiE;AAEjE,8DAAoF;AACpF,2EAAuG;AACvG,qEAA8F;AAC9F,qEAA8F;AAC9F,yDAA4E;AAC5E,mFAG6C;AAc7C;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,MAAa,WAAY,SAAQ,2BAAY,CAC3C,qDAAyB,CAAC,6CAAqB,CAAC,uCAAkB,CAAC,uCAAkB,CAAC,iCAAe,CAAC,CAAC,CAAC,CAAC,CAC1G;IACC,YAAmB,OAA4B;QAC7C,KAAK,CAAC,OAAO,CAAC,CAAC;IACjB,CAAC;IAEM,MAAM,CAAC,eAAe,CAAC,IAAY,EAAE,aAAqB;QAC/D,OAAO,GAAG,IAAI,IAAI,yBAAoB,IAAI,aAAa,EAAE,CAAC;IAC5D,CAAC;IAED,gBAAgB;IAChB,IAAW,IAAI;QACb,iCAA4B;IAC9B,CAAC;IAED,gBAAgB;IAChB,IAAW,YAAY;QACrB,OAAO,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACpE,CAAC;IAED,sBAAsB;IACf,uBAAuB;QAC5B,MAAM,aAAa,GAAc,2CAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChF,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,2CAAoB,CAAC,KAAK,EAAE,CAAC;aACjF,iBAAiB,oBAAqB,aAAa,CAAC;aACpD,WAAW,2BAAkB;aAC7B,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;CACF;AA7BD,kCA6BC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport {\r\n  DeclarationReference,\r\n  Meaning,\r\n  Navigation,\r\n  Component\r\n} from '@microsoft/tsdoc/lib-commonjs/beta/DeclarationReference';\r\nimport { ApiItemKind } from '../items/ApiItem';\r\nimport { IApiDeclaredItemOptions, ApiDeclaredItem } from '../items/ApiDeclaredItem';\r\nimport { IApiParameterListMixinOptions, ApiParameterListMixin } from '../mixins/ApiParameterListMixin';\r\nimport { IApiReleaseTagMixinOptions, ApiReleaseTagMixin } from '../mixins/ApiReleaseTagMixin';\r\nimport { IApiReturnTypeMixinOptions, ApiReturnTypeMixin } from '../mixins/ApiReturnTypeMixin';\r\nimport { IApiNameMixinOptions, ApiNameMixin } from '../mixins/ApiNameMixin';\r\nimport {\r\n  IApiTypeParameterListMixinOptions,\r\n  ApiTypeParameterListMixin\r\n} from '../mixins/ApiTypeParameterListMixin';\r\n\r\n/**\r\n * Constructor options for {@link ApiFunction}.\r\n * @public\r\n */\r\nexport interface IApiFunctionOptions\r\n  extends IApiNameMixinOptions,\r\n    IApiTypeParameterListMixinOptions,\r\n    IApiParameterListMixinOptions,\r\n    IApiReleaseTagMixinOptions,\r\n    IApiReturnTypeMixinOptions,\r\n    IApiDeclaredItemOptions {}\r\n\r\n/**\r\n * Represents a TypeScript function declaration.\r\n *\r\n * @remarks\r\n *\r\n * This is part of the {@link ApiModel} hierarchy of classes, which are serializable representations of\r\n * API declarations.\r\n *\r\n * `ApiFunction` represents a TypeScript declaration such as this example:\r\n *\r\n * ```ts\r\n * export function getAverage(x: number, y: number): number {\r\n *   return (x + y) / 2.0;\r\n * }\r\n * ```\r\n *\r\n * Functions are exported by an entry point module or by a namespace.  Compare with {@link ApiMethod}, which\r\n * represents a function that is a member of a class.\r\n *\r\n * @public\r\n */\r\nexport class ApiFunction extends ApiNameMixin(\r\n  ApiTypeParameterListMixin(ApiParameterListMixin(ApiReleaseTagMixin(ApiReturnTypeMixin(ApiDeclaredItem))))\r\n) {\r\n  public constructor(options: IApiFunctionOptions) {\r\n    super(options);\r\n  }\r\n\r\n  public static getContainerKey(name: string, overloadIndex: number): string {\r\n    return `${name}|${ApiItemKind.Function}|${overloadIndex}`;\r\n  }\r\n\r\n  /** @override */\r\n  public get kind(): ApiItemKind {\r\n    return ApiItemKind.Function;\r\n  }\r\n\r\n  /** @override */\r\n  public get containerKey(): string {\r\n    return ApiFunction.getContainerKey(this.name, this.overloadIndex);\r\n  }\r\n\r\n  /** @beta @override */\r\n  public buildCanonicalReference(): DeclarationReference {\r\n    const nameComponent: Component = DeclarationReference.parseComponent(this.name);\r\n    return (this.parent ? this.parent.canonicalReference : DeclarationReference.empty())\r\n      .addNavigationStep(Navigation.Exports, nameComponent)\r\n      .withMeaning(Meaning.Function)\r\n      .withOverloadIndex(this.overloadIndex);\r\n  }\r\n}\r\n"]}