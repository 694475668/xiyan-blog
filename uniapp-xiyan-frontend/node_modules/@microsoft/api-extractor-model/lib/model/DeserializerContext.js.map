{"version":3,"file":"DeserializerContext.js","sourceRoot":"","sources":["../../src/model/DeserializerContext.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAI3D,IAAY,oBAwDX;AAxDD,WAAY,oBAAoB;IAC9B;;OAEG;IACH,sEAAa,CAAA;IAEb;;OAEG;IACH,sEAAa,CAAA;IAEb;;OAEG;IACH,sEAAa,CAAA;IAEb;;;;;OAKG;IACH,sEAAa,CAAA;IAEb;;;;;OAKG;IACH,sEAAa,CAAA;IAEb;;;;;OAKG;IACH,sEAAe,CAAA;IAEf;;;;;OAKG;IACH,0FAAyB,CAAA;IAEzB;;;;;;OAMG;IACH,8GAAmC,CAAA;AACrC,CAAC,EAxDW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAwD/B;AAED,MAAa,mBAAmB;IA0B9B,YAAmB,OAA4B;QAC7C,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,CAAC;QACzD,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;IACvD,CAAC;CACF;AAjCD,kDAiCC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { TSDocConfiguration } from '@microsoft/tsdoc';\r\n\r\nexport enum ApiJsonSchemaVersion {\r\n  /**\r\n   * The initial release.\r\n   */\r\n  V_1000 = 1000,\r\n\r\n  /**\r\n   * Add support for type parameters and type alias types.\r\n   */\r\n  V_1001 = 1001,\r\n\r\n  /**\r\n   * Remove \"canonicalReference\" field.  This field was for diagnostic purposes only and was never deserialized.\r\n   */\r\n  V_1002 = 1002,\r\n\r\n  /**\r\n   * Reintroduce the \"canonicalReference\" field using the experimental new TSDoc declaration reference notation.\r\n   *\r\n   * This is not a breaking change because this field is never deserialized; it is provided for informational\r\n   * purposes only.\r\n   */\r\n  V_1003 = 1003,\r\n\r\n  /**\r\n   * Add a \"tsdocConfig\" field that tracks the TSDoc configuration for parsing doc comments.\r\n   *\r\n   * This is not a breaking change because an older implementation will still work correctly.  The\r\n   * custom tags will be skipped over by the parser.\r\n   */\r\n  V_1004 = 1004,\r\n\r\n  /**\r\n   * The current latest .api.json schema version.\r\n   *\r\n   * IMPORTANT: When incrementing this number, consider whether `OLDEST_SUPPORTED` or `OLDEST_FORWARDS_COMPATIBLE`\r\n   * should be updated.\r\n   */\r\n  LATEST = V_1004,\r\n\r\n  /**\r\n   * The oldest .api.json schema version that is still supported for backwards compatibility.\r\n   *\r\n   * This must be updated if you change to the file format and do not implement compatibility logic for\r\n   * deserializing the older representation.\r\n   */\r\n  OLDEST_SUPPORTED = V_1001,\r\n\r\n  /**\r\n   * Used to assign `IApiPackageMetadataJson.oldestForwardsCompatibleVersion`.\r\n   *\r\n   * This value must be \\<= `ApiJsonSchemaVersion.LATEST`.  It must be reset to the `LATEST` value\r\n   * if the older library would not be able to deserialize your new file format.  Adding a nonessential field\r\n   * is generally okay.  Removing, modifying, or reinterpreting existing fields is NOT safe.\r\n   */\r\n  OLDEST_FORWARDS_COMPATIBLE = V_1001\r\n}\r\n\r\nexport class DeserializerContext {\r\n  /**\r\n   * The path of the file being deserialized, which may be useful for diagnostic purposes.\r\n   */\r\n  public readonly apiJsonFilename: string;\r\n\r\n  /**\r\n   * Metadata from `IApiPackageMetadataJson.toolPackage`.\r\n   */\r\n  public readonly toolPackage: string;\r\n\r\n  /**\r\n   * Metadata from `IApiPackageMetadataJson.toolVersion`.\r\n   */\r\n  public readonly toolVersion: string;\r\n\r\n  /**\r\n   * The version of the schema being deserialized, as obtained from `IApiPackageMetadataJson.schemaVersion`.\r\n   */\r\n  public readonly versionToDeserialize: ApiJsonSchemaVersion;\r\n\r\n  /**\r\n   * The TSDoc configuration for the context.\r\n   */\r\n  public readonly tsdocConfiguration: TSDocConfiguration;\r\n\r\n  public constructor(options: DeserializerContext) {\r\n    this.apiJsonFilename = options.apiJsonFilename;\r\n    this.toolPackage = options.toolPackage;\r\n    this.toolVersion = options.toolVersion;\r\n    this.versionToDeserialize = options.versionToDeserialize;\r\n    this.tsdocConfiguration = options.tsdocConfiguration;\r\n  }\r\n}\r\n"]}