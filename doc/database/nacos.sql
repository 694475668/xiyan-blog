/*
SQLyog Ultimate v12.08 (64 bit)
MySQL - 8.0.22 : Database - nacos
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`nacos` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;

USE `nacos`;

/*Table structure for table `config_info` */

DROP TABLE IF EXISTS `config_info`;

CREATE TABLE `config_info` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=145 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='config_info';

/*Data for the table `config_info` */

insert  into `config_info`(`id`,`data_id`,`group_id`,`content`,`md5`,`gmt_create`,`gmt_modified`,`src_user`,`src_ip`,`app_name`,`tenant_id`,`c_desc`,`c_use`,`effect`,`type`,`c_schema`) values (1,'xiyan-gateway','DEFAULT_GROUP','management:\n  # 端点检查（健康检查）\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\nspring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n    gateway:\n      #处理跨域\n      globalcors:\n        corsConfigurations:\n          \'[/**]\':\n            allowedHeaders: \"*\"\n            allowedOrigins: \"*\"\n            allowedMethods: \"*\"\n      discovery:\n        locator:\n          #false为服务名不自动匹配，true则相反\n          enabled: false\n          #服务名以小写进行匹配\n          lowerCaseServiceId: true\n      routes:\n        #web服务\n        - id: service-1\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-2\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-3\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/tag/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-4\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-5\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-6\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/link/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        \n        - id: service-7\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/message/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-8\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/message/add\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-9\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/music/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-10\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/aes/key\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-11\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/comment/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-12\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-13\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-14\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-15\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-16\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/pay/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-17\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/tv/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n\n        - id: service-18\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-19\n          uri: lb://oss-service\n          predicates:\n            - Path=/oss/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-20\n          uri: lb://search-service\n          predicates:\n            - Path=/search/technology/list\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-21\n          uri: lb://search-service\n          predicates:\n            - Path=/search/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n        - id: service-22\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/qq/login\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-23\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/send\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-24\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/register\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-25\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/retrieve\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-26\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/qq/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-27\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/weibo/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-28\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/leaderboard/**\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-29\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/by\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-30\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/update\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-31\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/login\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        \n        - id: service-32\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n    #Sentinel         \n    sentinel:\n      datasource:\n        gate-way-flow: \n          nacos:\n            #如果你的配置分为了很多的环境，那么这个一定要配置，不然会出现找不到\n            namespace: prod\n            data-id: xiyan-gateway-rules\n            group-id: DEFAULT_GROUP\n            rule-type: gw_flow\n            server-addr: nacos:8848\n      transport:\n        dashboard: sentinel:8888  \n    # gateway 流控规则持久化配置  \n      # 限流返回的响应\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: 您操作过快，请稍后在试!   \n            #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender: \n      type: kafka\n    service: \n      name: xiyan-gateway-service\n  #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n  sleuth:\n    sampler: \n      probability: 1\n  kafka: \n    bootstrap-servers: kafka-service:9092\n  redis: \n    host: redis\n    port: 6379\n    timeout: 5000\n    password: yoostar403\n    cache:\n      expires: -1\n# 序列化key\nredis-key: xiyan\n','322588ce58f6b96e537f0832af78d5f8','2021-01-07 10:43:31','2021-03-19 13:43:29',NULL,'10.244.0.0','','prod','','','','yaml',''),(2,'xiyan-gateway-rules','DEFAULT_GROUP','[{\n		\"resource\": \"service-1\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-2\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-3\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-4\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-5\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-6\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-7\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-8\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-9\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-10\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-11\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-12\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-13\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-14\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-15\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-16\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-17\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-18\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-19\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-20\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-21\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-22\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-23\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-24\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-25\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-26\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-27\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-28\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-29\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-30\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},\n	{\n		\"resource\": \"service-31\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	},{\n		\"resource\": \"service-32\",\n		\"grade\": 1,\n		\"count\": 10,\n		\"intervalSec\": 1\n	}\n]','0e392ba42a6e77e78a6e09b1eacd26d7','2021-01-07 10:43:31','2021-03-18 10:30:27',NULL,'192.168.80.1','','prod','','','','json',''),(4,'oss-service','DEFAULT_GROUP','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n  # 设置上传文件大小\n  servlet:\n    multipart:\n      max-file-size: 2MB\n      max-request-size: 5MB\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: oss-service\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka-service:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: oss-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    port: 6379\n    password: yoostar403\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n  #feign调用超时时间配置，超过这个时间就熔断降级\n  client:\n    config:\n      default:\n        connectTimeout: 5000\n        readTimeout: 5000\n\n#  七牛秘钥\noss:\n  qiniu:\n     accessKey: accessKey\n     secretKey: secretKey\n     #图片名字\n     bucketPictureName: sunset-pictures\n     #图片外部访问拦截\n     domainPicture: 图片外部访问地址\n     #文件名字\n     bucketFileName: sunset-file\n     #文件外部访问拦截\n     domainFile: 文件外部访问地址\n\n#redis序列化key\nredis-key: xiyan','a7e14537954de0e7ae63791f8b7f613f','2021-01-07 10:43:31','2021-03-21 03:20:50',NULL,'10.244.0.0','','prod','','','','yaml',''),(5,'admin-server-service','DEFAULT_GROUP','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender: \n      type: kafka\n    service: \n      name: admin-server\n  #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n  sleuth:\n    sampler: \n      probability: 1\n  kafka: \n    bootstrap-servers: kafka-service:9092\n  redis: \n    host: redis\n    port: 6379\n    password: yoostar403\n    timeout: 5000\n    cache:\n      expires: 1\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n','d297de2688b9c6120cbd9b0825dc08ff','2021-01-07 10:43:31','2021-03-19 13:45:37',NULL,'10.244.0.0','','prod','','','','yaml',''),(119,'xiyan-web-service','DEFAULT_GROUP','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: xiyan-web-service\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: yoostar403\n    url: jdbc:mysql://mysql:3306/xiyandb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\n    hikari:\n      auto-commit: true\n      connection-test-query: SELECT 1\n      connection-timeout: 10000\n      idle-timeout: 30000\n      max-lifetime: 900000\n      maximum-pool-size: 30\n      minimum-idle: 10\n    type: com.zaxxer.hikari.HikariDataSource\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka-service:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: xiyan-web-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    password: yoostar403\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n  #feign调用超时时间配置，超过这个时间就熔断降级\n  client:\n    config:\n      default:\n        connectTimeout: 5000\n        readTimeout: 5000\n     \n#  mybatis-plus配置\nmybatis-plus:\n  #实体类扫描地址\n  type-aliases-package: com.xiyan.domain\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  # 以下配置均有默认值,可以不设置\n  global-config:\n    db-config:\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\n      id-type: auto\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #数据库类型\n      db-type: MYSQL\n  configuration:\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n    map-underscore-to-camel-case: true\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\n    call-setters-on-nulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# Seata\nseata:\n  # seata 事务组编号，用于 TC 集群名\n  tx-service-group: bss\n  # seata 应用编号，默认为 ${spring.application.name}\n  application-id: xiyan-web-service\n  service:\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\n    vgroup-mapping:\n      bss: default\n    grouplist:\n      default: seata:8091\n  # seata 注册中心配置项，对应 RegistryProperties 类\n  # registry:\n  #   # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     #Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848\n  # config:\n  #    # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     # Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848 \n#分布式任务调度报警邮箱\nalarm-email: 694475668@qq.com\n\n#分布式任务调度 xxl-job\nxxl:\n  job:\n    #数据库admin账户的密码\n    password: 123456\n    accessToken: member\n    admin:\n      addresses: http://xxl-job-admin:8097/xxl-job-admin\n    executor:\n      #address: \n      appname: xxl-job\n      #ip: \n      logpath: /home/aisys/logs/xxl-job/dlocal-jobhandler\n      logretentiondays: 30\n      port: 9988\n\n#redis序列化key\nredis-key: xiyan\n\n\npay:\n  app_secret: app_secret\n  url:  http://pay.xiyanit.cn','61fd14d0702fd919642e4d53a0c6951f','2021-03-18 10:31:11','2021-03-21 03:21:08',NULL,'10.244.0.0','','prod','','','','yaml',''),(121,'search-service','DEFAULT_GROUP','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n  # 设置上传文件大小\n  servlet:\n    multipart:\n      max-file-size: 2MB\n      max-request-size: 5MB\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: search-service\n\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka-service:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: search-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    password: yoostar403\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: 1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n  #feign调用超时时间配置，超过这个时间就熔断降级\n  client:\n    config:\n      default:\n        connectTimeout: 5000\n        readTimeout: 5000\n\n#redis序列化key\nredis-key: xiyan','48d54c6d8ea5549ad36fdbab503747e7','2021-03-18 10:31:56','2021-03-21 03:21:20',NULL,'10.244.0.0','','prod','','','','yaml',''),(122,'system-base-service','DEFAULT_GROUP','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: system-base-service\n\n  security:\n    user:\n      name: 694475668@qq.com\n      password: baby52013148\n\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: yoostar403\n    url: jdbc:mysql://mysql:3306/systembasedb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\n    hikari:\n      auto-commit: true\n      connection-test-query: SELECT 1\n      connection-timeout: 10000\n      idle-timeout: 30000\n      max-lifetime: 900000\n      maximum-pool-size: 30\n      minimum-idle: 10\n    type: com.zaxxer.hikari.HikariDataSource\n\n  mail:\n    host: smtp.163.com\n    #邮箱\n    username: xiyanyuanma@163.com  \n    #密钥\n    password: password \n    port: 465\n    properties.mail.smtp.ssl.enable: true\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka-service:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: systen-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    password: yoostar403\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n  #feign调用超时时间配置，超过这个时间就熔断降级\n  client:\n    config:\n      default:\n        connectTimeout: 5000\n        readTimeout: 5000\n     \n#  mybatis-plus配置\nmybatis-plus:\n  #实体类扫描地址\n  type-aliases-package: com.xiyan.domain\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  # 以下配置均有默认值,可以不设置\n  global-config:\n    db-config:\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\n      id-type: auto\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #数据库类型\n      db-type: MYSQL\n  configuration:\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n    map-underscore-to-camel-case: true\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\n    call-setters-on-nulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# Seata\nseata:\n  # seata 事务组编号，用于 TC 集群名\n  tx-service-group: bss\n  # seata 应用编号，默认为 ${spring.application.name}\n  application-id: system-base-service\n  service:\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\n    vgroup-mapping:\n      bss: default\n    grouplist:\n      default: seata:8091\n  # seata 注册中心配置项，对应 RegistryProperties 类\n  # registry:\n  #   # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     #Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848\n  # config:\n  #    # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     # Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848 \n\n\n#redis序列化key\nredis-key: xiyan\n\n#QQ互联中的回调地址\nqq:\n  back: http://xiyanit.cn/xiyan/system/qq/back\n  app_id: 101933614\n  app_key: app_key\n\nweibo:\n  back: http://xiyanit.cn/xiyan/system/qq/back\n  client_id: 3751771182\n  client_secret: client_secret\n\n#QQ或者微博登录返回的前端地址\nweb:\n url: http://xiyanit.cn/home\n\n# 配置Security需要忽略的路径\nexclude:\n    path:\n      - /swagger-ui/**\n      - /swagger-resources/**\n      - /v3/api-docs\n      - /qq/login\n      - /leaderboard/**\n      - /user/send\n      - /user/register\n      - /user/retrieve\n      - /user/by\n      - /qq/back\n      - /user/update\n      - /user/bind\n      - /weibo/back','be14c7edca030010ef87083421a472d3','2021-03-18 10:32:21','2021-03-21 03:22:30',NULL,'10.244.0.0','','prod','','','','yaml','');

/*Table structure for table `config_info_aggr` */

DROP TABLE IF EXISTS `config_info_aggr`;

CREATE TABLE `config_info_aggr` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='增加租户字段';

/*Data for the table `config_info_aggr` */

/*Table structure for table `config_info_beta` */

DROP TABLE IF EXISTS `config_info_beta`;

CREATE TABLE `config_info_beta` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='config_info_beta';

/*Data for the table `config_info_beta` */

/*Table structure for table `config_info_tag` */

DROP TABLE IF EXISTS `config_info_tag`;

CREATE TABLE `config_info_tag` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='config_info_tag';

/*Data for the table `config_info_tag` */

/*Table structure for table `config_tags_relation` */

DROP TABLE IF EXISTS `config_tags_relation`;

CREATE TABLE `config_tags_relation` (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`) USING BTREE,
  KEY `idx_tenant_id` (`tenant_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='config_tag_relation';

/*Data for the table `config_tags_relation` */

/*Table structure for table `group_capacity` */

DROP TABLE IF EXISTS `group_capacity`;

CREATE TABLE `group_capacity` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_group_id` (`group_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='集群、各Group容量信息表';

/*Data for the table `group_capacity` */

/*Table structure for table `his_config_info` */

DROP TABLE IF EXISTS `his_config_info`;

CREATE TABLE `his_config_info` (
  `id` bigint unsigned NOT NULL,
  `nid` bigint unsigned NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin,
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  KEY `idx_gmt_create` (`gmt_create`) USING BTREE,
  KEY `idx_gmt_modified` (`gmt_modified`) USING BTREE,
  KEY `idx_did` (`data_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=162 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='多租户改造';

/*Data for the table `his_config_info` */

insert  into `his_config_info`(`id`,`nid`,`data_id`,`group_id`,`app_name`,`content`,`md5`,`gmt_create`,`gmt_modified`,`src_user`,`src_ip`,`op_type`,`tenant_id`) values (1,133,'xiyan-gateway','DEFAULT_GROUP','','management:\n  # 端点检查（健康检查）\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\nspring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n    gateway:\n      #处理跨域\n      globalcors:\n        corsConfigurations:\n          \'[/**]\':\n            allowedHeaders: \"*\"\n            allowedOrigins: \"*\"\n            allowedMethods: \"*\"\n      discovery:\n        locator:\n          #false为服务名不自动匹配，true则相反\n          enabled: false\n          #服务名以小写进行匹配\n          lowerCaseServiceId: true\n      routes:\n        #cms服务\n        - id: service-1\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/article/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-2\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/article/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-3\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/code/tag/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-4\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/code/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-5\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/code/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-6\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/link/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-7\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/leaderboard/gold\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-8\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/leaderboard/upload\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-9\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/leaderboard/download\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-10\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/leaderboard/favorites\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-11\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/message/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-12\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/message/add\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-13\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/music/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-14\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/user/send\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-15\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/user/register\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-16\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/user/login\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-17\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/user/retrieve\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-18\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/user/login\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-19\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/user/qq/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-20\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/user/weibo/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-21\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/aes/key\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-22\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/comment/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-23\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/article/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-24\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/article/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-25\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/code/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-26\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/code/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-27\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/tv/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-28\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/search/list\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-29\n          uri: lb://cms-service\n          predicates:\n            - Path=/cms/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-30\n          uri: lb://oss-service\n          predicates:\n            - Path=/oss/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n    #Sentinel         \n    sentinel:\n      datasource:\n        gate-way-flow: \n          nacos:\n            #如果你的配置分为了很多的环境，那么这个一定要配置，不然会出现找不到\n            namespace: prod\n            data-id: xiyan-gateway-rules\n            group-id: DEFAULT_GROUP\n            rule-type: gw_flow\n            server-addr: nacos:8848\n      transport:\n        dashboard: sentinel:8888  \n    # gateway 流控规则持久化配置  \n      # 限流返回的响应\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: 您操作过快，请稍后在试!   \n            #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender: \n      type: kafka\n    service: \n      name: xiyan-gateway\n  #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n  sleuth:\n    sampler: \n      probability: 1\n  kafka: \n    bootstrap-servers: kafka:9092\n  redis: \n    host: redis\n    port: 6379\n    password: yoostar403\n    timeout: 5000\n    cache:\n      expires: -1\n# 序列化key\nredis-key: xiyan\n\n','2f42d05f4549feb9d6ac306455b81f6f','2021-03-18 10:30:09','2021-03-18 10:30:09',NULL,'192.168.80.1','U','prod'),(2,134,'xiyan-gateway-rules','DEFAULT_GROUP','','[{\r\n		\"resource\": \"service-1\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-2\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-3\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-4\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-5\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-6\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-7\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-8\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-9\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-10\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-11\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-12\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-13\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-14\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-15\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-16\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-17\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-18\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-19\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-20\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-21\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-22\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-23\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-24\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-25\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-26\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-27\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-28\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-29\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	},\r\n	{\r\n		\"resource\": \"service-30\",\r\n		\"grade\": 1,\r\n		\"count\": 10,\r\n		\"intervalSec\": 1\r\n	}\r\n]','dbc4ff4b7f5fc6158b33c270e0f59d9c','2021-03-18 10:30:27','2021-03-18 10:30:27',NULL,'192.168.80.1','U','prod'),(0,135,'xiyan-web-service','DEFAULT_GROUP','','s','03c7c0ace395d80182db07ae2c30f034','2021-03-18 10:31:11','2021-03-18 10:31:11',NULL,'192.168.80.1','I','prod'),(119,136,'xiyan-web-service','DEFAULT_GROUP','','s','03c7c0ace395d80182db07ae2c30f034','2021-03-18 10:31:39','2021-03-18 10:31:39',NULL,'192.168.80.1','U','prod'),(0,137,'search-service','DEFAULT_GROUP','','spring:\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 128.14.163.18:8848\r\n        namespace: 4ec05052-6224-4d34-975a-b27132b60587\r\n  # 设置上传文件大小\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 2MB\r\n      max-request-size: 5MB\r\n       \r\n  sleuth:\r\n    sampler:\r\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\r\n      probability: 1\r\n          #springCloudSleuth\r\n  zipkin:\r\n    baseUrl: http://128.14.163.18:9411/\r\n    enabled: true\r\n    sender:\r\n      type: kafka\r\n    service:\r\n      name: search-service\r\n\r\n  # es\r\n  data:\r\n  elasticsearch:\r\n    rest:\r\n      uris: [ \"128.14.163.18:9200\" ]\r\n    elasticsearch:\r\n      #集群名称\r\n      cluster-name: docker-cluster \r\n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\r\n      cluster-nodes: 128.14.163.18:9300 \r\n      properties:\r\n        path:\r\n          #elasticsearch日志存储目录\r\n          logs: /home/aisys/logs/elasticsearch/log \r\n          #elasticsearch数据存储目录\r\n          data: /home/aisys/logs/elasticsearch/data \r\n\r\n  # Kafka\r\n  kafka:\r\n    bootstrap-servers: 128.14.163.18:9092\r\n    #=============== consumer  =======================\r\n    consumer:\r\n      auto-commit-interval: 100\r\n      auto-offset-reset: earliest\r\n      group-id: search-group\r\n      # true=自动提交；false=手动提交\r\n      enable-auto-commit: false\r\n    #=============== provider  =======================\r\n    # all,-1,0,1 \r\n    producer:\r\n      acks: -1\r\n      #批量发送消息字节数，默认值为16384\r\n      batch-size: 16384\r\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\r\n      buffer-memory: 33554432\r\n      retries: 0\r\n      \r\n      # Redis\r\n  redis:\r\n    host: 127.0.0.1\r\n    port: 6379\r\n    timeout: 10000\r\n    cache:\r\n      expires: 1\r\n      \r\n#feign\r\nfeign: \r\n  sentinel: \r\n    enabled: true\r\n\r\n#redis序列化key\r\nredis-key: xiyan','b177d9b964890ed104e173835c913ac2','2021-03-18 10:31:56','2021-03-18 10:31:56',NULL,'192.168.80.1','I','prod'),(0,138,'system-base-service','DEFAULT_GROUP','','spring:\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 128.14.163.18:8848\r\n        namespace: 4ec05052-6224-4d34-975a-b27132b60587\r\n       \r\n  sleuth:\r\n    sampler:\r\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\r\n      probability: 1\r\n          #springCloudSleuth\r\n  zipkin:\r\n    baseUrl: http://128.14.163.18:9411/\r\n    enabled: true\r\n    sender:\r\n      type: kafka\r\n    service:\r\n      name: system-base-service\r\n\r\n  security:\r\n    user:\r\n      name: 694475668@qq.com\r\n      password: baby52013148\r\n\r\n  # es\r\n  data:\r\n  elasticsearch:\r\n    rest:\r\n      uris: [ \"128.14.163.18:9200\" ]\r\n    elasticsearch:\r\n      #集群名称\r\n      cluster-name: docker-cluster \r\n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\r\n      cluster-nodes: 128.14.163.18:9300 \r\n      properties:\r\n        path:\r\n          #elasticsearch日志存储目录\r\n          logs: /home/aisys/logs/elasticsearch/log \r\n          #elasticsearch数据存储目录\r\n          data: /home/aisys/logs/elasticsearch/data \r\n\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://127.0.0.1:3306/systembasedb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\r\n    hikari:\r\n      auto-commit: true\r\n      connection-test-query: SELECT 1\r\n      connection-timeout: 10000\r\n      idle-timeout: 30000\r\n      max-lifetime: 900000\r\n      maximum-pool-size: 30\r\n      minimum-idle: 10\r\n    type: com.zaxxer.hikari.HikariDataSource\r\n\r\n  mail:\r\n    host: smtp.163.com\r\n    #邮箱\r\n    username: xiyanyuanma@163.com  \r\n    #密钥\r\n    password: PVDCQNZENJYFUMSY \r\n    port: 465\r\n    properties.mail.smtp.ssl.enable: true\r\n\r\n  # Kafka\r\n  kafka:\r\n    bootstrap-servers: 128.14.163.18:9092\r\n    #=============== consumer  =======================\r\n    consumer:\r\n      auto-commit-interval: 100\r\n      auto-offset-reset: earliest\r\n      group-id: user-group\r\n      # true=自动提交；false=手动提交\r\n      enable-auto-commit: false\r\n    #=============== provider  =======================\r\n    # all,-1,0,1 \r\n    producer:\r\n      acks: -1\r\n      #批量发送消息字节数，默认值为16384\r\n      batch-size: 16384\r\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\r\n      buffer-memory: 33554432\r\n      retries: 0\r\n      \r\n      # Redis\r\n  redis:\r\n    host: 127.0.0.1\r\n    port: 6379\r\n    timeout: 10000\r\n    cache:\r\n      expires: -1\r\n      \r\n#feign\r\nfeign: \r\n  sentinel: \r\n    enabled: true\r\n     \r\n#  mybatis-plus配置\r\nmybatis-plus:\r\n  #实体类扫描地址\r\n  type-aliases-package: com.xiyan.domain\r\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  # 以下配置均有默认值,可以不设置\r\n  global-config:\r\n    db-config:\r\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\r\n      id-type: auto\r\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #数据库类型\r\n      db-type: MYSQL\r\n  configuration:\r\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\r\n    map-underscore-to-camel-case: true\r\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\r\n    call-setters-on-nulls: true\r\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\r\n\r\n# Seata\r\nseata:\r\n  # seata 事务组编号，用于 TC 集群名\r\n  tx-service-group: bss\r\n  # seata 应用编号，默认为 ${spring.application.name}\r\n  application-id: user-service\r\n  service:\r\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\r\n    vgroup-mapping:\r\n      bss: default\r\n    grouplist:\r\n      default: 128.14.163.18:8091\r\n  # seata 注册中心配置项，对应 RegistryProperties 类\r\n  # registry:\r\n  #   # 注册中心类型，默认为 file\r\n  #   type: nacos\r\n  #   nacos:\r\n  #     #Nacos 服务地址\r\n  #     server-addr: 128.14.163.18:8848\r\n  # config:\r\n  #    # 注册中心类型，默认为 file\r\n  #   type: nacos\r\n  #   nacos:\r\n  #     # Nacos 服务地址\r\n  #     server-addr: 128.14.163.18:8848 \r\n\r\n\r\n#redis序列化key\r\nredis-key: xiyan\r\n\r\n#QQ互联中的回调地址\r\nqq:\r\n  back: http://2187mb1668.iask.in/member/qq/back\r\n  app_id: 101933614\r\n  app_key: bf1192e0607ed882460b2e3ba57584bd\r\n\r\nweibo:\r\n  back: http://xiyanit.cn/xiyan/user/weibo/back\r\n  client_id: 3751771182\r\n  client_secret: 3fef5ac20cefbd69ef4ae92a31b6de2c\r\n\r\n#QQ或者微博登录返回的前端地址\r\nweb:\r\n url: http://192.168.1.171:8090/home\r\n\r\n# 配置Security需要忽略的路径\r\nexclude:\r\n    path:\r\n      - /swagger-ui/**\r\n      - /swagger-resources/**\r\n      - /v3/api-docs\r\n      - /qq/login\r\n      - /leaderboard/**\r\n      - /user/send\r\n      - /user/register\r\n      - /user/retrieve\r\n      - /user/by\r\n      - /qq/back\r\n      - /user/update\r\n      - /user/bind\r\n      - /weibo/back','b422761e94febdf4bc919ddbd837d388','2021-03-18 10:32:21','2021-03-18 10:32:21',NULL,'192.168.80.1','I','prod'),(3,139,'cms-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: xiyan-service\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: yoostar403\n    url: jdbc:mysql://mysql:3306/xiyan?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\n    hikari:\n      auto-commit: true\n      connection-test-query: SELECT 1\n      connection-timeout: 10000\n      idle-timeout: 30000\n      max-lifetime: 900000\n      maximum-pool-size: 30\n      minimum-idle: 10\n    type: com.zaxxer.hikari.HikariDataSource\n\n  mail:\n    host: smtp.163.com\n    #邮箱\n    username: xiyanyuanma@163.com  \n    #密钥\n    password: PVDCQNZENJYFUMSY \n    port: 465\n    properties.mail.smtp.ssl.enable: true\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: cms-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    port: 6379\n    password: yoostar403\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n     \n#  mybatis-plus配置\nmybatis-plus:\n  #实体类扫描地址\n  type-aliases-package: com.xiyan.domain\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  # 以下配置均有默认值,可以不设置\n  global-config:\n    db-config:\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\n      id-type: auto\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #数据库类型\n      db-type: MYSQL\n  configuration:\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n    map-underscore-to-camel-case: true\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\n    call-setters-on-nulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# Seata\nseata:\n  # seata 事务组编号，用于 TC 集群名\n  tx-service-group: bss\n  # seata 应用编号，默认为 ${spring.application.name}\n  application-id: cms-service\n  service:\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\n    vgroup-mapping:\n      bss: default\n    grouplist:\n      default: seata:8091\n  # seata 注册中心配置项，对应 RegistryProperties 类\n  # registry:\n  #   # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     #Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848\n  # config:\n  #    # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     # Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848 \n#分布式任务调度报警邮箱\nalarm-email: 694475668@qq.com\n\n#分布式任务调度 xxl-job\nxxl:\n  job:\n    #数据库admin账户的密码\n    password: 123456\n    accessToken: member\n    admin:\n      addresses: http://xxl-job-admin:8088/xxl-job-admin\n    executor:\n      #address: \n      appname: xxl-job\n      #ip: \n      logpath: /home/aisys/logs/xxl-job/\n      logretentiondays: 30\n      port: 9988\n\n#redis序列化key\nredis-key: xiyan\n\n#QQ互联中的回调地址\nqq:\n  back: http://xiyanyuanma.com/xiyan/cms/qq/back\n  app_id: app_id\n  app_key: app_key\n\nweibo:\n  back: http://xiyanyuanma.com/xiyan/cms/weibo/back\n  client_id: client_id\n  client_secret: client_secret\n\npay:\n  app_secret: cde05c324c815bef313c5d9115de9249\n  url:  http://192.168.28.129/','2f2691b29bf86864be21f551019e5f6e','2021-03-18 10:32:32','2021-03-18 10:32:33',NULL,'192.168.80.1','D','prod'),(1,140,'xiyan-gateway','DEFAULT_GROUP','','management:\n  # 端点检查（健康检查）\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\nspring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 128.14.163.18:8848\n        namespace: 4ec05052-6224-4d34-975a-b27132b60587\n    gateway:\n      #处理跨域\n      globalcors:\n        corsConfigurations:\n          \'[/**]\':\n            allowedHeaders: \"*\"\n            allowedOrigins: \"*\"\n            allowedMethods: \"*\"\n      discovery:\n        locator:\n          #false为服务名不自动匹配，true则相反\n          enabled: false\n          #服务名以小写进行匹配\n          lowerCaseServiceId: true\n      routes:\n        #web服务\n        - id: service-1\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-2\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-3\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/tag/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-4\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-5\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-6\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/link/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        \n        - id: service-7\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/message/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-8\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/message/add\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-9\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/music/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-10\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/aes/key\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-11\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/comment/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-12\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-13\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-14\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-15\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-16\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/pay/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-17\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/tv/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n\n        - id: service-18\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-19\n          uri: lb://oss-service\n          predicates:\n            - Path=/oss/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-20\n          uri: lb://search-service\n          predicates:\n            - Path=/search/technology/list\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-21\n          uri: lb://search-service\n          predicates:\n            - Path=/search/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n        - id: service-22\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/qq/login\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-23\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/send\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-24\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/register\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-25\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/retrieve\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-26\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/qq/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-27\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/weibo/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-28\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/leaderboard/**\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-29\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/by\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-30\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/update\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-31\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/login\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        \n        - id: service-32\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n    #Sentinel         \n    sentinel:\n      datasource:\n        gate-way-flow: \n          nacos:\n            #如果你的配置分为了很多的环境，那么这个一定要配置，不然会出现找不到\n            namespace: 4ec05052-6224-4d34-975a-b27132b60587\n            data-id: xiyan-gateway-rules\n            group-id: DEFAULT_GROUP\n            rule-type: gw_flow\n            server-addr: 128.14.163.18:8848\n      transport:\n        dashboard: 128.14.163.18:8888  \n    # gateway 流控规则持久化配置  \n      # 限流返回的响应\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: 您操作过快，请稍后在试!   \n            #springCloudSleuth\n  zipkin:\n    baseUrl: http://128.14.163.18:9411/\n    enabled: true\n    sender: \n      type: kafka\n    service: \n      name: xiyan-gateway-service\n  #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n  sleuth:\n    sampler: \n      probability: 1\n  kafka: \n    bootstrap-servers: 128.14.163.18:9092\n  redis: \n    host: 127.0.0.1\n    port: 6379\n    timeout: 5000\n    cache:\n      expires: -1\n# 序列化key\nredis-key: xiyan\n','6ffe33b8275146c3e59a8e40f7bf05b8','2021-03-18 10:34:34','2021-03-18 10:34:35',NULL,'192.168.80.1','U','prod'),(119,141,'xiyan-web-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 128.14.163.18:8848\n        namespace: 4ec05052-6224-4d34-975a-b27132b60587\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://128.14.163.18:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: xiyan-web-service\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"128.14.163.18:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: 128.14.163.18:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: root\n    url: jdbc:mysql://127.0.0.1:3306/xiyandb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\n    hikari:\n      auto-commit: true\n      connection-test-query: SELECT 1\n      connection-timeout: 10000\n      idle-timeout: 30000\n      max-lifetime: 900000\n      maximum-pool-size: 30\n      minimum-idle: 10\n    type: com.zaxxer.hikari.HikariDataSource\n\n  # Kafka\n  kafka:\n    bootstrap-servers: 128.14.163.18:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: xiyan-web-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n     \n#  mybatis-plus配置\nmybatis-plus:\n  #实体类扫描地址\n  type-aliases-package: com.xiyan.domain\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  # 以下配置均有默认值,可以不设置\n  global-config:\n    db-config:\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\n      id-type: auto\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #数据库类型\n      db-type: MYSQL\n  configuration:\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n    map-underscore-to-camel-case: true\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\n    call-setters-on-nulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# Seata\nseata:\n  # seata 事务组编号，用于 TC 集群名\n  tx-service-group: bss\n  # seata 应用编号，默认为 ${spring.application.name}\n  application-id: xiyan-web-service\n  service:\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\n    vgroup-mapping:\n      bss: default\n    grouplist:\n      default: 128.14.163.18:8091\n  # seata 注册中心配置项，对应 RegistryProperties 类\n  # registry:\n  #   # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     #Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848\n  # config:\n  #    # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     # Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848 \n#分布式任务调度报警邮箱\nalarm-email: 694475668@qq.com\n\n#分布式任务调度 xxl-job\nxxl:\n  job:\n    #数据库admin账户的密码\n    password: 123456\n    accessToken: member\n    admin:\n      addresses: http://128.14.163.18:8097/xxl-job-admin\n    executor:\n      #address: \n      appname: xxl-job\n      #ip: \n      logpath: /home/aisys/logs/xxl-job/dlocal-jobhandler\n      logretentiondays: 30\n      port: 9988\n\n#redis序列化key\nredis-key: xiyan\n\n\npay:\n  app_secret: f5ce5258b7d34fded2b97d369e0a8231\n  url:  http://pay.xiyanit.cn','310d1652fdb8d3123bea896f62ed88a3','2021-03-18 10:37:26','2021-03-18 10:37:27',NULL,'192.168.80.1','U','prod'),(121,142,'search-service','DEFAULT_GROUP','','spring:\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 128.14.163.18:8848\r\n        namespace: 4ec05052-6224-4d34-975a-b27132b60587\r\n  # 设置上传文件大小\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 2MB\r\n      max-request-size: 5MB\r\n       \r\n  sleuth:\r\n    sampler:\r\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\r\n      probability: 1\r\n          #springCloudSleuth\r\n  zipkin:\r\n    baseUrl: http://128.14.163.18:9411/\r\n    enabled: true\r\n    sender:\r\n      type: kafka\r\n    service:\r\n      name: search-service\r\n\r\n  # es\r\n  data:\r\n  elasticsearch:\r\n    rest:\r\n      uris: [ \"128.14.163.18:9200\" ]\r\n    elasticsearch:\r\n      #集群名称\r\n      cluster-name: docker-cluster \r\n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\r\n      cluster-nodes: 128.14.163.18:9300 \r\n      properties:\r\n        path:\r\n          #elasticsearch日志存储目录\r\n          logs: /home/aisys/logs/elasticsearch/log \r\n          #elasticsearch数据存储目录\r\n          data: /home/aisys/logs/elasticsearch/data \r\n\r\n  # Kafka\r\n  kafka:\r\n    bootstrap-servers: 128.14.163.18:9092\r\n    #=============== consumer  =======================\r\n    consumer:\r\n      auto-commit-interval: 100\r\n      auto-offset-reset: earliest\r\n      group-id: search-group\r\n      # true=自动提交；false=手动提交\r\n      enable-auto-commit: false\r\n    #=============== provider  =======================\r\n    # all,-1,0,1 \r\n    producer:\r\n      acks: -1\r\n      #批量发送消息字节数，默认值为16384\r\n      batch-size: 16384\r\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\r\n      buffer-memory: 33554432\r\n      retries: 0\r\n      \r\n      # Redis\r\n  redis:\r\n    host: 127.0.0.1\r\n    port: 6379\r\n    timeout: 10000\r\n    cache:\r\n      expires: 1\r\n      \r\n#feign\r\nfeign: \r\n  sentinel: \r\n    enabled: true\r\n\r\n#redis序列化key\r\nredis-key: xiyan','b177d9b964890ed104e173835c913ac2','2021-03-18 10:38:23','2021-03-18 10:38:23',NULL,'192.168.80.1','U','prod'),(122,143,'system-base-service','DEFAULT_GROUP','','spring:\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 128.14.163.18:8848\r\n        namespace: 4ec05052-6224-4d34-975a-b27132b60587\r\n       \r\n  sleuth:\r\n    sampler:\r\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\r\n      probability: 1\r\n          #springCloudSleuth\r\n  zipkin:\r\n    baseUrl: http://128.14.163.18:9411/\r\n    enabled: true\r\n    sender:\r\n      type: kafka\r\n    service:\r\n      name: system-base-service\r\n\r\n  security:\r\n    user:\r\n      name: 694475668@qq.com\r\n      password: baby52013148\r\n\r\n  # es\r\n  data:\r\n  elasticsearch:\r\n    rest:\r\n      uris: [ \"128.14.163.18:9200\" ]\r\n    elasticsearch:\r\n      #集群名称\r\n      cluster-name: docker-cluster \r\n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\r\n      cluster-nodes: 128.14.163.18:9300 \r\n      properties:\r\n        path:\r\n          #elasticsearch日志存储目录\r\n          logs: /home/aisys/logs/elasticsearch/log \r\n          #elasticsearch数据存储目录\r\n          data: /home/aisys/logs/elasticsearch/data \r\n\r\n  datasource:\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://127.0.0.1:3306/systembasedb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\r\n    hikari:\r\n      auto-commit: true\r\n      connection-test-query: SELECT 1\r\n      connection-timeout: 10000\r\n      idle-timeout: 30000\r\n      max-lifetime: 900000\r\n      maximum-pool-size: 30\r\n      minimum-idle: 10\r\n    type: com.zaxxer.hikari.HikariDataSource\r\n\r\n  mail:\r\n    host: smtp.163.com\r\n    #邮箱\r\n    username: xiyanyuanma@163.com  \r\n    #密钥\r\n    password: PVDCQNZENJYFUMSY \r\n    port: 465\r\n    properties.mail.smtp.ssl.enable: true\r\n\r\n  # Kafka\r\n  kafka:\r\n    bootstrap-servers: 128.14.163.18:9092\r\n    #=============== consumer  =======================\r\n    consumer:\r\n      auto-commit-interval: 100\r\n      auto-offset-reset: earliest\r\n      group-id: user-group\r\n      # true=自动提交；false=手动提交\r\n      enable-auto-commit: false\r\n    #=============== provider  =======================\r\n    # all,-1,0,1 \r\n    producer:\r\n      acks: -1\r\n      #批量发送消息字节数，默认值为16384\r\n      batch-size: 16384\r\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\r\n      buffer-memory: 33554432\r\n      retries: 0\r\n      \r\n      # Redis\r\n  redis:\r\n    host: 127.0.0.1\r\n    port: 6379\r\n    timeout: 10000\r\n    cache:\r\n      expires: -1\r\n      \r\n#feign\r\nfeign: \r\n  sentinel: \r\n    enabled: true\r\n     \r\n#  mybatis-plus配置\r\nmybatis-plus:\r\n  #实体类扫描地址\r\n  type-aliases-package: com.xiyan.domain\r\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  # 以下配置均有默认值,可以不设置\r\n  global-config:\r\n    db-config:\r\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\r\n      id-type: auto\r\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #数据库类型\r\n      db-type: MYSQL\r\n  configuration:\r\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\r\n    map-underscore-to-camel-case: true\r\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\r\n    call-setters-on-nulls: true\r\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\r\n\r\n# Seata\r\nseata:\r\n  # seata 事务组编号，用于 TC 集群名\r\n  tx-service-group: bss\r\n  # seata 应用编号，默认为 ${spring.application.name}\r\n  application-id: user-service\r\n  service:\r\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\r\n    vgroup-mapping:\r\n      bss: default\r\n    grouplist:\r\n      default: 128.14.163.18:8091\r\n  # seata 注册中心配置项，对应 RegistryProperties 类\r\n  # registry:\r\n  #   # 注册中心类型，默认为 file\r\n  #   type: nacos\r\n  #   nacos:\r\n  #     #Nacos 服务地址\r\n  #     server-addr: 128.14.163.18:8848\r\n  # config:\r\n  #    # 注册中心类型，默认为 file\r\n  #   type: nacos\r\n  #   nacos:\r\n  #     # Nacos 服务地址\r\n  #     server-addr: 128.14.163.18:8848 \r\n\r\n\r\n#redis序列化key\r\nredis-key: xiyan\r\n\r\n#QQ互联中的回调地址\r\nqq:\r\n  back: http://2187mb1668.iask.in/member/qq/back\r\n  app_id: 101933614\r\n  app_key: bf1192e0607ed882460b2e3ba57584bd\r\n\r\nweibo:\r\n  back: http://xiyanit.cn/xiyan/user/weibo/back\r\n  client_id: 3751771182\r\n  client_secret: 3fef5ac20cefbd69ef4ae92a31b6de2c\r\n\r\n#QQ或者微博登录返回的前端地址\r\nweb:\r\n url: http://192.168.1.171:8090/home\r\n\r\n# 配置Security需要忽略的路径\r\nexclude:\r\n    path:\r\n      - /swagger-ui/**\r\n      - /swagger-resources/**\r\n      - /v3/api-docs\r\n      - /qq/login\r\n      - /leaderboard/**\r\n      - /user/send\r\n      - /user/register\r\n      - /user/retrieve\r\n      - /user/by\r\n      - /qq/back\r\n      - /user/update\r\n      - /user/bind\r\n      - /weibo/back','b422761e94febdf4bc919ddbd837d388','2021-03-18 10:40:48','2021-03-18 10:40:49',NULL,'192.168.80.1','U','prod'),(122,144,'system-base-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: system-base-service\n\n  security:\n    user:\n      name: 694475668@qq.com\n      password: baby52013148\n\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: yoostar403\n    url: jdbc:mysql://mysql:3306/systembasedb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\n    hikari:\n      auto-commit: true\n      connection-test-query: SELECT 1\n      connection-timeout: 10000\n      idle-timeout: 30000\n      max-lifetime: 900000\n      maximum-pool-size: 30\n      minimum-idle: 10\n    type: com.zaxxer.hikari.HikariDataSource\n\n  mail:\n    host: smtp.163.com\n    #邮箱\n    username: xiyanyuanma@163.com  \n    #密钥\n    password: password \n    port: 465\n    properties.mail.smtp.ssl.enable: true\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: user-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n     \n#  mybatis-plus配置\nmybatis-plus:\n  #实体类扫描地址\n  type-aliases-package: com.xiyan.domain\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  # 以下配置均有默认值,可以不设置\n  global-config:\n    db-config:\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\n      id-type: auto\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #数据库类型\n      db-type: MYSQL\n  configuration:\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n    map-underscore-to-camel-case: true\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\n    call-setters-on-nulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# Seata\nseata:\n  # seata 事务组编号，用于 TC 集群名\n  tx-service-group: bss\n  # seata 应用编号，默认为 ${spring.application.name}\n  application-id: system-base-service\n  service:\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\n    vgroup-mapping:\n      bss: default\n    grouplist:\n      default: seata:8091\n  # seata 注册中心配置项，对应 RegistryProperties 类\n  # registry:\n  #   # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     #Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848\n  # config:\n  #    # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     # Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848 \n\n\n#redis序列化key\nredis-key: xiyan\n\n#QQ互联中的回调地址\nqq:\n  back: http://2187mb1668.iask.in/member/qq/back\n  app_id: 101933614\n  app_key: app_key\n\nweibo:\n  back: http://2187mb1668.iask.in/member/qq/back\n  client_id: 3751771182\n  client_secret: client_secret\n\n#QQ或者微博登录返回的前端地址\nweb:\n url: http://192.168.1.171:8090/home\n\n# 配置Security需要忽略的路径\nexclude:\n    path:\n      - /swagger-ui/**\n      - /swagger-resources/**\n      - /v3/api-docs\n      - /qq/login\n      - /leaderboard/**\n      - /user/send\n      - /user/register\n      - /user/retrieve\n      - /user/by\n      - /qq/back\n      - /user/update\n      - /user/bind\n      - /weibo/back','8f6b0c61306af4249f23189ae7239cd3','2021-03-18 10:42:39','2021-03-18 10:42:40',NULL,'192.168.80.1','U','prod'),(122,145,'system-base-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: system-base-service\n\n  security:\n    user:\n      name: 694475668@qq.com\n      password: baby52013148\n\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: yoostar403\n    url: jdbc:mysql://mysql:3306/systembasedb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\n    hikari:\n      auto-commit: true\n      connection-test-query: SELECT 1\n      connection-timeout: 10000\n      idle-timeout: 30000\n      max-lifetime: 900000\n      maximum-pool-size: 30\n      minimum-idle: 10\n    type: com.zaxxer.hikari.HikariDataSource\n\n  mail:\n    host: smtp.163.com\n    #邮箱\n    username: xiyanyuanma@163.com  \n    #密钥\n    password: password \n    port: 465\n    properties.mail.smtp.ssl.enable: true\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: user-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n     \n#  mybatis-plus配置\nmybatis-plus:\n  #实体类扫描地址\n  type-aliases-package: com.xiyan.domain\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  # 以下配置均有默认值,可以不设置\n  global-config:\n    db-config:\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\n      id-type: auto\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #数据库类型\n      db-type: MYSQL\n  configuration:\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n    map-underscore-to-camel-case: true\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\n    call-setters-on-nulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# Seata\nseata:\n  # seata 事务组编号，用于 TC 集群名\n  tx-service-group: bss\n  # seata 应用编号，默认为 ${spring.application.name}\n  application-id: system-base-service\n  service:\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\n    vgroup-mapping:\n      bss: default\n    grouplist:\n      default: seata:8091\n  # seata 注册中心配置项，对应 RegistryProperties 类\n  # registry:\n  #   # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     #Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848\n  # config:\n  #    # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     # Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848 \n\n\n#redis序列化key\nredis-key: xiyan\n\n#QQ互联中的回调地址\nqq:\n  back: http://2187mb1668.iask.in/member/qq/back\n  app_id: 101933614\n  app_key: app_key\n\nweibo:\n  back: http://2187mb1668.iask.in/member/qq/back\n  client_id: 3751771182\n  client_secret: client_secret\n\n#QQ或者微博登录返回的前端地址\nweb:\n url: http://192.168.1.171:8090/home\n\n# 配置Security需要忽略的路径\nexclude:\n    path:\n      - /swagger-ui/**\n      - /swagger-resources/**\n      - /v3/api-docs\n      - /qq/login\n      - /leaderboard/**\n      - /user/send\n      - /user/register\n      - /user/retrieve\n      - /user/by\n      - /qq/back\n      - /user/update\n      - /user/bind\n      - /weibo/back','8f6b0c61306af4249f23189ae7239cd3','2021-03-18 14:05:30','2021-03-18 14:05:31',NULL,'192.168.80.1','U','prod'),(1,146,'xiyan-gateway','DEFAULT_GROUP','','management:\n  # 端点检查（健康检查）\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\nspring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n    gateway:\n      #处理跨域\n      globalcors:\n        corsConfigurations:\n          \'[/**]\':\n            allowedHeaders: \"*\"\n            allowedOrigins: \"*\"\n            allowedMethods: \"*\"\n      discovery:\n        locator:\n          #false为服务名不自动匹配，true则相反\n          enabled: false\n          #服务名以小写进行匹配\n          lowerCaseServiceId: true\n      routes:\n        #web服务\n        - id: service-1\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-2\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-3\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/tag/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-4\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-5\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-6\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/link/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        \n        - id: service-7\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/message/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-8\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/message/add\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-9\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/music/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-10\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/aes/key\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-11\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/comment/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-12\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-13\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-14\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-15\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-16\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/pay/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-17\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/tv/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n\n        - id: service-18\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-19\n          uri: lb://oss-service\n          predicates:\n            - Path=/oss/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-20\n          uri: lb://search-service\n          predicates:\n            - Path=/search/technology/list\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-21\n          uri: lb://search-service\n          predicates:\n            - Path=/search/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n        - id: service-22\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/qq/login\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-23\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/send\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-24\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/register\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-25\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/retrieve\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-26\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/qq/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-27\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/weibo/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-28\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/leaderboard/**\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-29\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/by\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-30\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/update\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-31\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/login\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        \n        - id: service-32\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n    #Sentinel         \n    sentinel:\n      datasource:\n        gate-way-flow: \n          nacos:\n            #如果你的配置分为了很多的环境，那么这个一定要配置，不然会出现找不到\n            namespace: prod\n            data-id: xiyan-gateway-rules\n            group-id: DEFAULT_GROUP\n            rule-type: gw_flow\n            server-addr: nacos:8848\n      transport:\n        dashboard: sentinel:8888  \n    # gateway 流控规则持久化配置  \n      # 限流返回的响应\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: 您操作过快，请稍后在试!   \n            #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender: \n      type: kafka\n    service: \n      name: xiyan-gateway-service\n  #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n  sleuth:\n    sampler: \n      probability: 1\n  kafka: \n    bootstrap-servers: kafka:9092\n  redis: \n    host: redis\n    port: 6379\n    timeout: 5000\n    cache:\n      expires: -1\n# 序列化key\nredis-key: xiyan\n','425e65c4b555cb920cd69bef451b3c2e','2021-03-19 04:30:22','2021-03-19 04:30:23',NULL,'192.168.80.1','U','prod'),(119,147,'xiyan-web-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: xiyan-web-service\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: yoostar403\n    url: jdbc:mysql://mysql:3306/xiyandb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\n    hikari:\n      auto-commit: true\n      connection-test-query: SELECT 1\n      connection-timeout: 10000\n      idle-timeout: 30000\n      max-lifetime: 900000\n      maximum-pool-size: 30\n      minimum-idle: 10\n    type: com.zaxxer.hikari.HikariDataSource\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: xiyan-web-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n     \n#  mybatis-plus配置\nmybatis-plus:\n  #实体类扫描地址\n  type-aliases-package: com.xiyan.domain\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  # 以下配置均有默认值,可以不设置\n  global-config:\n    db-config:\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\n      id-type: auto\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #数据库类型\n      db-type: MYSQL\n  configuration:\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n    map-underscore-to-camel-case: true\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\n    call-setters-on-nulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# Seata\nseata:\n  # seata 事务组编号，用于 TC 集群名\n  tx-service-group: bss\n  # seata 应用编号，默认为 ${spring.application.name}\n  application-id: xiyan-web-service\n  service:\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\n    vgroup-mapping:\n      bss: default\n    grouplist:\n      default: seata:8091\n  # seata 注册中心配置项，对应 RegistryProperties 类\n  # registry:\n  #   # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     #Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848\n  # config:\n  #    # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     # Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848 \n#分布式任务调度报警邮箱\nalarm-email: 694475668@qq.com\n\n#分布式任务调度 xxl-job\nxxl:\n  job:\n    #数据库admin账户的密码\n    password: 123456\n    accessToken: member\n    admin:\n      addresses: http://xxl-job-admin:8097/xxl-job-admin\n    executor:\n      #address: \n      appname: xxl-job\n      #ip: \n      logpath: /home/aisys/logs/xxl-job/dlocal-jobhandler\n      logretentiondays: 30\n      port: 9988\n\n#redis序列化key\nredis-key: xiyan\n\n\npay:\n  app_secret: app_secret\n  url:  http://pay.xiyanit.cn','e5cab76ac87c7e95d342e81f67791b33','2021-03-19 04:30:55','2021-03-19 04:30:55',NULL,'192.168.80.1','U','prod'),(121,148,'search-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n  # 设置上传文件大小\n  servlet:\n    multipart:\n      max-file-size: 2MB\n      max-request-size: 5MB\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: search-service\n\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: search-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: 1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n\n#redis序列化key\nredis-key: xiyan','fcf53bd66c2207dbcd438058cd55a918','2021-03-19 04:31:07','2021-03-19 04:31:07',NULL,'192.168.80.1','U','prod'),(122,149,'system-base-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: system-base-service\n\n  security:\n    user:\n      name: 694475668@qq.com\n      password: baby52013148\n\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: yoostar403\n    url: jdbc:mysql://mysql:3306/systembasedb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\n    hikari:\n      auto-commit: true\n      connection-test-query: SELECT 1\n      connection-timeout: 10000\n      idle-timeout: 30000\n      max-lifetime: 900000\n      maximum-pool-size: 30\n      minimum-idle: 10\n    type: com.zaxxer.hikari.HikariDataSource\n\n  mail:\n    host: smtp.163.com\n    #邮箱\n    username: xiyanyuanma@163.com  \n    #密钥\n    password: password \n    port: 465\n    properties.mail.smtp.ssl.enable: true\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: systen-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n     \n#  mybatis-plus配置\nmybatis-plus:\n  #实体类扫描地址\n  type-aliases-package: com.xiyan.domain\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  # 以下配置均有默认值,可以不设置\n  global-config:\n    db-config:\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\n      id-type: auto\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #数据库类型\n      db-type: MYSQL\n  configuration:\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n    map-underscore-to-camel-case: true\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\n    call-setters-on-nulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# Seata\nseata:\n  # seata 事务组编号，用于 TC 集群名\n  tx-service-group: bss\n  # seata 应用编号，默认为 ${spring.application.name}\n  application-id: system-base-service\n  service:\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\n    vgroup-mapping:\n      bss: default\n    grouplist:\n      default: seata:8091\n  # seata 注册中心配置项，对应 RegistryProperties 类\n  # registry:\n  #   # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     #Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848\n  # config:\n  #    # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     # Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848 \n\n\n#redis序列化key\nredis-key: xiyan\n\n#QQ互联中的回调地址\nqq:\n  back: http://2187mb1668.iask.in/member/qq/back\n  app_id: 101933614\n  app_key: app_key\n\nweibo:\n  back: http://2187mb1668.iask.in/member/qq/back\n  client_id: 3751771182\n  client_secret: client_secret\n\n#QQ或者微博登录返回的前端地址\nweb:\n url: http://192.168.1.171:8090/home\n\n# 配置Security需要忽略的路径\nexclude:\n    path:\n      - /swagger-ui/**\n      - /swagger-resources/**\n      - /v3/api-docs\n      - /qq/login\n      - /leaderboard/**\n      - /user/send\n      - /user/register\n      - /user/retrieve\n      - /user/by\n      - /qq/back\n      - /user/update\n      - /user/bind\n      - /weibo/back','240e865f0b62daa7b56f253f2400e212','2021-03-19 04:31:18','2021-03-19 04:31:18',NULL,'192.168.80.1','U','prod'),(1,150,'xiyan-gateway','DEFAULT_GROUP','','management:\n  # 端点检查（健康检查）\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\nspring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n    gateway:\n      #处理跨域\n      globalcors:\n        corsConfigurations:\n          \'[/**]\':\n            allowedHeaders: \"*\"\n            allowedOrigins: \"*\"\n            allowedMethods: \"*\"\n      discovery:\n        locator:\n          #false为服务名不自动匹配，true则相反\n          enabled: false\n          #服务名以小写进行匹配\n          lowerCaseServiceId: true\n      routes:\n        #web服务\n        - id: service-1\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-2\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-3\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/tag/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-4\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-5\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-6\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/link/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        \n        - id: service-7\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/message/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-8\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/message/add\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-9\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/music/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-10\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/aes/key\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-11\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/comment/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-12\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-13\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-14\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-15\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-16\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/pay/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-17\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/tv/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n\n        - id: service-18\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-19\n          uri: lb://oss-service\n          predicates:\n            - Path=/oss/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-20\n          uri: lb://search-service\n          predicates:\n            - Path=/search/technology/list\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-21\n          uri: lb://search-service\n          predicates:\n            - Path=/search/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n        - id: service-22\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/qq/login\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-23\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/send\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-24\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/register\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-25\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/retrieve\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-26\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/qq/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-27\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/weibo/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-28\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/leaderboard/**\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-29\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/by\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-30\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/update\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-31\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/login\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        \n        - id: service-32\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n    #Sentinel         \n    sentinel:\n      datasource:\n        gate-way-flow: \n          nacos:\n            #如果你的配置分为了很多的环境，那么这个一定要配置，不然会出现找不到\n            namespace: prod\n            data-id: xiyan-gateway-rules\n            group-id: DEFAULT_GROUP\n            rule-type: gw_flow\n            server-addr: nacos:8848\n      transport:\n        dashboard: sentinel:8888  \n    # gateway 流控规则持久化配置  \n      # 限流返回的响应\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: 您操作过快，请稍后在试!   \n            #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender: \n      type: kafka\n    service: \n      name: xiyan-gateway-service\n  #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n  sleuth:\n    sampler: \n      probability: 1\n  kafka: \n    bootstrap-servers: kafka:9092\n  redis: \n    host: redis\n    port: 6379\n    timeout: 5000\n    password: yoostar403\n    cache:\n      expires: -1\n# 序列化key\nredis-key: xiyan\n','cdde7f83068d411c1b610c923c525cfb','2021-03-19 10:18:27','2021-03-19 10:18:27',NULL,'10.244.1.1','U','prod'),(1,151,'xiyan-gateway','DEFAULT_GROUP','','management:\n  # 端点检查（健康检查）\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\nspring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n    gateway:\n      #处理跨域\n      globalcors:\n        corsConfigurations:\n          \'[/**]\':\n            allowedHeaders: \"*\"\n            allowedOrigins: \"*\"\n            allowedMethods: \"*\"\n      discovery:\n        locator:\n          #false为服务名不自动匹配，true则相反\n          enabled: false\n          #服务名以小写进行匹配\n          lowerCaseServiceId: true\n      routes:\n        #web服务\n        - id: service-1\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-2\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-3\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/tag/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-4\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-5\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-6\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/link/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        \n        - id: service-7\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/message/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-8\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/message/add\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-9\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/music/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-10\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/aes/key\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-11\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/comment/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-12\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-13\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-14\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-15\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-16\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/pay/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-17\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/tv/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n\n        - id: service-18\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-19\n          uri: lb://oss-service\n          predicates:\n            - Path=/oss/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-20\n          uri: lb://search-service\n          predicates:\n            - Path=/search/technology/list\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-21\n          uri: lb://search-service\n          predicates:\n            - Path=/search/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n        - id: service-22\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/qq/login\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-23\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/send\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-24\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/register\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-25\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/retrieve\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-26\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/qq/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-27\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/weibo/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-28\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/leaderboard/**\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-29\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/by\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-30\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/update\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-31\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/login\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        \n        - id: service-32\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n    #Sentinel         \n    sentinel:\n      datasource:\n        gate-way-flow: \n          nacos:\n            #如果你的配置分为了很多的环境，那么这个一定要配置，不然会出现找不到\n            namespace: prod\n            data-id: xiyan-gateway-rules\n            group-id: DEFAULT_GROUP\n            rule-type: gw_flow\n            server-addr: nacos:8848\n      transport:\n        dashboard: sentinel:8888  \n    # gateway 流控规则持久化配置  \n      # 限流返回的响应\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: 您操作过快，请稍后在试!   \n            #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender: \n      type: kafka\n    service: \n      name: xiyan-gateway-service\n  #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n  sleuth:\n    sampler: \n      probability: 1\n  kafka: \n    bootstrap-servers: kafka.default:9092\n  redis: \n    host: redis\n    port: 6379\n    timeout: 5000\n    password: yoostar403\n    cache:\n      expires: -1\n# 序列化key\nredis-key: xiyan\n','66842ba0b951d4878866ffb04f4740f9','2021-03-19 10:28:33','2021-03-19 10:28:34',NULL,'10.244.1.1','U','prod'),(1,152,'xiyan-gateway','DEFAULT_GROUP','','management:\n  # 端点检查（健康检查）\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\nspring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n    gateway:\n      #处理跨域\n      globalcors:\n        corsConfigurations:\n          \'[/**]\':\n            allowedHeaders: \"*\"\n            allowedOrigins: \"*\"\n            allowedMethods: \"*\"\n      discovery:\n        locator:\n          #false为服务名不自动匹配，true则相反\n          enabled: false\n          #服务名以小写进行匹配\n          lowerCaseServiceId: true\n      routes:\n        #web服务\n        - id: service-1\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-2\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-3\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/tag/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-4\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-5\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/byId/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-6\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/link/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        \n        - id: service-7\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/message/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-8\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/message/add\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-9\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/music/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-10\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/aes/key\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-11\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/comment/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-12\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-13\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/article/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-14\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/browse/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-15\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/code/like/*\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-16\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/pay/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-17\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/tv/list\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n\n        - id: service-18\n          uri: lb://xiyan-web-service\n          predicates:\n            - Path=/web/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-19\n          uri: lb://oss-service\n          predicates:\n            - Path=/oss/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n\n        - id: service-20\n          uri: lb://search-service\n          predicates:\n            - Path=/search/technology/list\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-21\n          uri: lb://search-service\n          predicates:\n            - Path=/search/**\n          filters:\n          #开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n        - id: service-22\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/qq/login\n          filters:\n          #开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-23\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/send\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-24\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/register\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-25\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/retrieve\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-26\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/qq/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-27\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/weibo/back\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n        \n        - id: service-28\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/leaderboard/**\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-29\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/by\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-30\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/update\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        - id: service-31\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/user/login\n          filters:\n          #不开启token验证\n            - Authorize=false\n            - StripPrefix=1\n\n        \n        - id: service-32\n          uri: lb://system-base-service\n          predicates:\n            - Path=/system/**\n          filters:\n          #不开启token验证\n            - Authorize=true\n            - StripPrefix=1\n        \n    #Sentinel         \n    sentinel:\n      datasource:\n        gate-way-flow: \n          nacos:\n            #如果你的配置分为了很多的环境，那么这个一定要配置，不然会出现找不到\n            namespace: prod\n            data-id: xiyan-gateway-rules\n            group-id: DEFAULT_GROUP\n            rule-type: gw_flow\n            server-addr: nacos:8848\n      transport:\n        dashboard: sentinel:8888  \n    # gateway 流控规则持久化配置  \n      # 限流返回的响应\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: 您操作过快，请稍后在试!   \n            #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender: \n      type: kafka\n    service: \n      name: xiyan-gateway-service\n  #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n  sleuth:\n    sampler: \n      probability: 1\n  kafka: \n    bootstrap-servers: kafka:9092\n  redis: \n    host: redis\n    port: 6379\n    timeout: 5000\n    password: yoostar403\n    cache:\n      expires: -1\n# 序列化key\nredis-key: xiyan\n','cdde7f83068d411c1b610c923c525cfb','2021-03-19 13:43:31','2021-03-19 13:43:29',NULL,'10.244.0.0','U','prod'),(4,153,'oss-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n  # 设置上传文件大小\n  servlet:\n    multipart:\n      max-file-size: 2MB\n      max-request-size: 5MB\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: oss-service\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: oss-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    port: 6379\n    password: yoostar403\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n\n#  七牛秘钥\noss:\n  qiniu:\n     accessKey: accessKey\n     secretKey: secretKey\n     #图片名字\n     bucketPictureName: sunset-pictures\n     #图片外部访问拦截\n     domainPicture: 图片外部访问地址\n     #文件名字\n     bucketFileName: sunset-file\n     #文件外部访问拦截\n     domainFile: 文件外部访问地址\n\n#redis序列化key\nredis-key: xiyan','7320646f638937b48897fff4fa1236a6','2021-03-19 13:45:22','2021-03-19 13:45:22',NULL,'10.244.0.0','U','prod'),(5,154,'admin-server-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender: \n      type: kafka\n    service: \n      name: admin-server\n  #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n  sleuth:\n    sampler: \n      probability: 1\n  kafka: \n    bootstrap-servers: kafka:9092\n  redis: \n    host: redis\n    port: 6379\n    password: yoostar403\n    timeout: 5000\n    cache:\n      expires: 1\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n','635ee267f6d425716055c2bfaf4194b3','2021-03-19 13:45:37','2021-03-19 13:45:37',NULL,'10.244.0.0','U','prod'),(119,155,'xiyan-web-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: xiyan-web-service\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: yoostar403\n    url: jdbc:mysql://mysql:3306/xiyandb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\n    hikari:\n      auto-commit: true\n      connection-test-query: SELECT 1\n      connection-timeout: 10000\n      idle-timeout: 30000\n      max-lifetime: 900000\n      maximum-pool-size: 30\n      minimum-idle: 10\n    type: com.zaxxer.hikari.HikariDataSource\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: xiyan-web-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    password: yoostar403\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n     \n#  mybatis-plus配置\nmybatis-plus:\n  #实体类扫描地址\n  type-aliases-package: com.xiyan.domain\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  # 以下配置均有默认值,可以不设置\n  global-config:\n    db-config:\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\n      id-type: auto\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #数据库类型\n      db-type: MYSQL\n  configuration:\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n    map-underscore-to-camel-case: true\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\n    call-setters-on-nulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# Seata\nseata:\n  # seata 事务组编号，用于 TC 集群名\n  tx-service-group: bss\n  # seata 应用编号，默认为 ${spring.application.name}\n  application-id: xiyan-web-service\n  service:\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\n    vgroup-mapping:\n      bss: default\n    grouplist:\n      default: seata:8091\n  # seata 注册中心配置项，对应 RegistryProperties 类\n  # registry:\n  #   # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     #Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848\n  # config:\n  #    # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     # Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848 \n#分布式任务调度报警邮箱\nalarm-email: 694475668@qq.com\n\n#分布式任务调度 xxl-job\nxxl:\n  job:\n    #数据库admin账户的密码\n    password: 123456\n    accessToken: member\n    admin:\n      addresses: http://xxl-job-admin:8097/xxl-job-admin\n    executor:\n      #address: \n      appname: xxl-job\n      #ip: \n      logpath: /home/aisys/logs/xxl-job/dlocal-jobhandler\n      logretentiondays: 30\n      port: 9988\n\n#redis序列化key\nredis-key: xiyan\n\n\npay:\n  app_secret: app_secret\n  url:  http://pay.xiyanit.cn','820d58be1cb1ac5d7f70f2b57202b953','2021-03-19 13:45:56','2021-03-19 13:45:57',NULL,'10.244.0.0','U','prod'),(121,156,'search-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n  # 设置上传文件大小\n  servlet:\n    multipart:\n      max-file-size: 2MB\n      max-request-size: 5MB\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: search-service\n\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: search-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    password: yoostar403\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: 1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n\n#redis序列化key\nredis-key: xiyan','72592b580b22672a266a3e06504d0d7d','2021-03-19 13:46:27','2021-03-19 13:46:27',NULL,'10.244.0.0','U','prod'),(122,157,'system-base-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: system-base-service\n\n  security:\n    user:\n      name: 694475668@qq.com\n      password: baby52013148\n\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: yoostar403\n    url: jdbc:mysql://mysql:3306/systembasedb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\n    hikari:\n      auto-commit: true\n      connection-test-query: SELECT 1\n      connection-timeout: 10000\n      idle-timeout: 30000\n      max-lifetime: 900000\n      maximum-pool-size: 30\n      minimum-idle: 10\n    type: com.zaxxer.hikari.HikariDataSource\n\n  mail:\n    host: smtp.163.com\n    #邮箱\n    username: xiyanyuanma@163.com  \n    #密钥\n    password: password \n    port: 465\n    properties.mail.smtp.ssl.enable: true\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: systen-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    password: yoostar403\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n     \n#  mybatis-plus配置\nmybatis-plus:\n  #实体类扫描地址\n  type-aliases-package: com.xiyan.domain\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  # 以下配置均有默认值,可以不设置\n  global-config:\n    db-config:\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\n      id-type: auto\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #数据库类型\n      db-type: MYSQL\n  configuration:\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n    map-underscore-to-camel-case: true\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\n    call-setters-on-nulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# Seata\nseata:\n  # seata 事务组编号，用于 TC 集群名\n  tx-service-group: bss\n  # seata 应用编号，默认为 ${spring.application.name}\n  application-id: system-base-service\n  service:\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\n    vgroup-mapping:\n      bss: default\n    grouplist:\n      default: seata:8091\n  # seata 注册中心配置项，对应 RegistryProperties 类\n  # registry:\n  #   # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     #Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848\n  # config:\n  #    # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     # Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848 \n\n\n#redis序列化key\nredis-key: xiyan\n\n#QQ互联中的回调地址\nqq:\n  back: http://2187mb1668.iask.in/member/qq/back\n  app_id: 101933614\n  app_key: app_key\n\nweibo:\n  back: http://2187mb1668.iask.in/member/qq/back\n  client_id: 3751771182\n  client_secret: client_secret\n\n#QQ或者微博登录返回的前端地址\nweb:\n url: http://192.168.1.171:8090/home\n\n# 配置Security需要忽略的路径\nexclude:\n    path:\n      - /swagger-ui/**\n      - /swagger-resources/**\n      - /v3/api-docs\n      - /qq/login\n      - /leaderboard/**\n      - /user/send\n      - /user/register\n      - /user/retrieve\n      - /user/by\n      - /qq/back\n      - /user/update\n      - /user/bind\n      - /weibo/back','87e0708cf787caa97b9ffeca53f26212','2021-03-19 13:46:44','2021-03-19 13:46:44',NULL,'10.244.0.0','U','prod'),(4,158,'oss-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n  # 设置上传文件大小\n  servlet:\n    multipart:\n      max-file-size: 2MB\n      max-request-size: 5MB\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: oss-service\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka-service:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: oss-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    port: 6379\n    password: yoostar403\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n\n#  七牛秘钥\noss:\n  qiniu:\n     accessKey: accessKey\n     secretKey: secretKey\n     #图片名字\n     bucketPictureName: sunset-pictures\n     #图片外部访问拦截\n     domainPicture: 图片外部访问地址\n     #文件名字\n     bucketFileName: sunset-file\n     #文件外部访问拦截\n     domainFile: 文件外部访问地址\n\n#redis序列化key\nredis-key: xiyan','41cdbcfef3210a680ad74dc271f701bd','2021-03-21 03:20:50','2021-03-21 03:20:50',NULL,'10.244.0.0','U','prod'),(119,159,'xiyan-web-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: xiyan-web-service\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: yoostar403\n    url: jdbc:mysql://mysql:3306/xiyandb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\n    hikari:\n      auto-commit: true\n      connection-test-query: SELECT 1\n      connection-timeout: 10000\n      idle-timeout: 30000\n      max-lifetime: 900000\n      maximum-pool-size: 30\n      minimum-idle: 10\n    type: com.zaxxer.hikari.HikariDataSource\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka-service:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: xiyan-web-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    password: yoostar403\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n     \n#  mybatis-plus配置\nmybatis-plus:\n  #实体类扫描地址\n  type-aliases-package: com.xiyan.domain\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  # 以下配置均有默认值,可以不设置\n  global-config:\n    db-config:\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\n      id-type: auto\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #数据库类型\n      db-type: MYSQL\n  configuration:\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n    map-underscore-to-camel-case: true\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\n    call-setters-on-nulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# Seata\nseata:\n  # seata 事务组编号，用于 TC 集群名\n  tx-service-group: bss\n  # seata 应用编号，默认为 ${spring.application.name}\n  application-id: xiyan-web-service\n  service:\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\n    vgroup-mapping:\n      bss: default\n    grouplist:\n      default: seata:8091\n  # seata 注册中心配置项，对应 RegistryProperties 类\n  # registry:\n  #   # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     #Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848\n  # config:\n  #    # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     # Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848 \n#分布式任务调度报警邮箱\nalarm-email: 694475668@qq.com\n\n#分布式任务调度 xxl-job\nxxl:\n  job:\n    #数据库admin账户的密码\n    password: 123456\n    accessToken: member\n    admin:\n      addresses: http://xxl-job-admin:8097/xxl-job-admin\n    executor:\n      #address: \n      appname: xxl-job\n      #ip: \n      logpath: /home/aisys/logs/xxl-job/dlocal-jobhandler\n      logretentiondays: 30\n      port: 9988\n\n#redis序列化key\nredis-key: xiyan\n\n\npay:\n  app_secret: app_secret\n  url:  http://pay.xiyanit.cn','ab522030dd190204a2f327083ff4ab45','2021-03-21 03:21:07','2021-03-21 03:21:08',NULL,'10.244.0.0','U','prod'),(121,160,'search-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n  # 设置上传文件大小\n  servlet:\n    multipart:\n      max-file-size: 2MB\n      max-request-size: 5MB\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: search-service\n\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka-service:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: search-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    password: yoostar403\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: 1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n\n#redis序列化key\nredis-key: xiyan','d30387e40531b3f95f97e8865367413f','2021-03-21 03:21:20','2021-03-21 03:21:20',NULL,'10.244.0.0','U','prod'),(122,161,'system-base-service','DEFAULT_GROUP','','spring:\n  cloud:\n    nacos:\n      discovery:\n        server-addr: nacos:8848\n        namespace: prod\n       \n  sleuth:\n    sampler:\n    #区间是0.1到1， 1代表保存所有的链路， 0.1表示保存10%的链路\n      probability: 1\n          #springCloudSleuth\n  zipkin:\n    baseUrl: http://zipkin:9411/\n    enabled: true\n    sender:\n      type: kafka\n    service:\n      name: system-base-service\n\n  security:\n    user:\n      name: 694475668@qq.com\n      password: baby52013148\n\n  # es\n  data:\n  elasticsearch:\n    rest:\n      uris: [ \"elasticsearch:9200\" ]\n    elasticsearch:\n      #集群名称\n      cluster-name: docker-cluster \n      #配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode\n      cluster-nodes: elasticsearch:9300 \n      properties:\n        path:\n          #elasticsearch日志存储目录\n          logs: /home/aisys/logs/elasticsearch/log \n          #elasticsearch数据存储目录\n          data: /home/aisys/logs/elasticsearch/data \n\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: yoostar403\n    url: jdbc:mysql://mysql:3306/systembasedb?serverTimezone=UTC&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true\n    hikari:\n      auto-commit: true\n      connection-test-query: SELECT 1\n      connection-timeout: 10000\n      idle-timeout: 30000\n      max-lifetime: 900000\n      maximum-pool-size: 30\n      minimum-idle: 10\n    type: com.zaxxer.hikari.HikariDataSource\n\n  mail:\n    host: smtp.163.com\n    #邮箱\n    username: xiyanyuanma@163.com  \n    #密钥\n    password: password \n    port: 465\n    properties.mail.smtp.ssl.enable: true\n\n  # Kafka\n  kafka:\n    bootstrap-servers: kafka-service:9092\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      group-id: systen-group\n      # true=自动提交；false=手动提交\n      enable-auto-commit: false\n    #=============== provider  =======================\n    # all,-1,0,1 \n    producer:\n      acks: -1\n      #批量发送消息字节数，默认值为16384\n      batch-size: 16384\n      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为33554432\n      buffer-memory: 33554432\n      retries: 0\n      \n      # Redis\n  redis:\n    host: redis\n    password: yoostar403\n    port: 6379\n    timeout: 10000\n    cache:\n      expires: -1\n      \n#feign\nfeign: \n  sentinel: \n    enabled: true\n     \n#  mybatis-plus配置\nmybatis-plus:\n  #实体类扫描地址\n  type-aliases-package: com.xiyan.domain\n  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  # 以下配置均有默认值,可以不设置\n  global-config:\n    db-config:\n      #主键类型 AUTO:\"数据库ID自增\" INPUT:\"用户输入ID\",ID_WORKER:\"全局唯一ID (数字类型唯一ID)\", UUID:\"全局唯一ID UUID\";\n      id-type: auto\n      #字段策略 IGNORED:\"忽略判断\"  NOT_NULL:\"非 NULL 判断\")  NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #数据库类型\n      db-type: MYSQL\n  configuration:\n    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射\n    map-underscore-to-camel-case: true\n    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段\n    call-setters-on-nulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n\n# Seata\nseata:\n  # seata 事务组编号，用于 TC 集群名\n  tx-service-group: bss\n  # seata 应用编号，默认为 ${spring.application.name}\n  application-id: system-base-service\n  service:\n     # 虚拟组和分组的映射, key一定要与 tx-service-group一致\n    vgroup-mapping:\n      bss: default\n    grouplist:\n      default: seata:8091\n  # seata 注册中心配置项，对应 RegistryProperties 类\n  # registry:\n  #   # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     #Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848\n  # config:\n  #    # 注册中心类型，默认为 file\n  #   type: nacos\n  #   nacos:\n  #     # Nacos 服务地址\n  #     server-addr: 128.14.163.18:8848 \n\n\n#redis序列化key\nredis-key: xiyan\n\n#QQ互联中的回调地址\nqq:\n  back: http://2187mb1668.iask.in/member/qq/back\n  app_id: 101933614\n  app_key: app_key\n\nweibo:\n  back: http://2187mb1668.iask.in/member/qq/back\n  client_id: 3751771182\n  client_secret: client_secret\n\n#QQ或者微博登录返回的前端地址\nweb:\n url: http://192.168.1.171:8090/home\n\n# 配置Security需要忽略的路径\nexclude:\n    path:\n      - /swagger-ui/**\n      - /swagger-resources/**\n      - /v3/api-docs\n      - /qq/login\n      - /leaderboard/**\n      - /user/send\n      - /user/register\n      - /user/retrieve\n      - /user/by\n      - /qq/back\n      - /user/update\n      - /user/bind\n      - /weibo/back','0a6f9f279ddf3977950da2bcaffc549d','2021-03-21 03:22:30','2021-03-21 03:22:30',NULL,'10.244.0.0','U','prod');

/*Table structure for table `permissions` */

DROP TABLE IF EXISTS `permissions`;

CREATE TABLE `permissions` (
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `resource` varchar(512) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE KEY `uk_role_permission` (`role`,`resource`,`action`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;

/*Data for the table `permissions` */

/*Table structure for table `roles` */

DROP TABLE IF EXISTS `roles`;

CREATE TABLE `roles` (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE KEY `idx_user_role` (`username`,`role`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;

/*Data for the table `roles` */

insert  into `roles`(`username`,`role`) values ('nacos','ROLE_ADMIN');

/*Table structure for table `tenant_capacity` */

DROP TABLE IF EXISTS `tenant_capacity`;

CREATE TABLE `tenant_capacity` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数',
  `max_aggr_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_tenant_id` (`tenant_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='租户容量信息表';

/*Data for the table `tenant_capacity` */

/*Table structure for table `tenant_info` */

DROP TABLE IF EXISTS `tenant_info`;

CREATE TABLE `tenant_info` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`) USING BTREE,
  KEY `idx_tenant_id` (`tenant_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC COMMENT='tenant_info';

/*Data for the table `tenant_info` */

insert  into `tenant_info`(`id`,`kp`,`tenant_id`,`tenant_name`,`tenant_desc`,`create_source`,`gmt_create`,`gmt_modified`) values (1,'1','prod','prod','prod','nacos',1610015573894,1610015573894);

/*Table structure for table `undo_log` */

DROP TABLE IF EXISTS `undo_log`;

CREATE TABLE `undo_log` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `branch_id` bigint NOT NULL,
  `xid` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `context` varchar(128) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `rollback_info` longblob NOT NULL,
  `log_status` int NOT NULL,
  `log_created` datetime NOT NULL,
  `log_modified` datetime NOT NULL,
  `ext` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `ux_undo_log` (`xid`,`branch_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;

/*Data for the table `undo_log` */

/*Table structure for table `users` */

DROP TABLE IF EXISTS `users`;

CREATE TABLE `users` (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC;

/*Data for the table `users` */

insert  into `users`(`username`,`password`,`enabled`) values ('nacos','$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu',1);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
